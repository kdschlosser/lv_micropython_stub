# MIT License
# Author: Kevin G. Schlosser
# Date: 01/29/2023 - 9:31PM MST (-7UTC)


from typing import Callable, List, Union, Any


_obj_t = Any

DPI_DEF: int = ...
ANIM_REPEAT_INFINITE: int = ...
ANIM_PLAYTIME_INFINITE: int = ...
COLOR_DEPTH: int = ...
IMG_ZOOM_NONE: int = ...
RADIUS_CIRCLE: int = ...
LABEL_DOT_NUM: int = ...
LABEL_POS_LAST: int = ...
LABEL_TEXT_SELECTION_OFF: int = ...
BTNMATRIX_BTN_NONE: int = ...
CHART_POINT_NONE: int = ...
DROPDOWN_POS_LAST: int = ...
TEXTAREA_CURSOR_LAST: int = ...
TABLE_CELL_NONE: int = ...
OBJ_FLAG_FLEX_IN_NEW_TRACK: int = ...
GRID_CONTENT: int = ...
GRID_TEMPLATE_LAST: int = ...

INV_BUF_SIZE: int = ...  # Buffer size for invalid areas

ATTRIBUTE_FLUSH_READY: int = ...

# Default display refresh, input device read and animation step period.
DEF_REFR_PERIOD: int = ...  # [ms]

class SIZE:
    CONTENT: int = ...


class palette_t(int):
    ...


class coord_t(int):
    ...


class point_t:
    x: coord_t = ...
    y: coord_t = ...


class area_t:
    x1: coord_t = ...
    y1: coord_t = ...
    x2: coord_t = ...
    y2: coord_t = ...


class align_t(int):
    ...


class dir_t(int):
    ...


class scrollbar_mode_t(int):
    ...


class scroll_snap_t(int):
    ...


class event_code_t(int):
    ...


class _event_t:
    target: "_obj_t" = ...
    current_target: "_obj_t" = ...
    code: event_code_t = ...
    user_data = ...
    param = ...
    prev: "_event_t" = ...
    deleted: int = ...
    stop_processing: int = ...
    stop_bubbling: int = ...


event_t = _event_t


class _event_dsc_t:

    def cb(self) -> None:
        ...

    user_data = ...
    filter: event_code_t = ...


event_dsc_t = _event_dsc_t


# Dummy type to make handling easier
class ll_node_t(int):
    ...


# Description of a linked list
class ll_t:
    n_size: int = ...
    head: ll_node_t = ...
    tail: ll_node_t = ...


class _group_t:
    obj_ll: ll_t = ...  #  Linked list to store the objects in the group
    obj_focus: "_obj_t" = ...

    def group_focus_cb_t(self) -> None:
        """A function to call when a new object is focused (optional)"""
        ...

    def group_edge_cb_t(self, _: bool) -> None:
        """
        A function to call when an edge is reached, no more focus targets 
        are available in this direction (to allow edge feedback like a sound 
        or a scroll bounce)
        """
        ...

    frozen: int = ...  # 1: can't focus to new object
    editing: int = ...  # 1: Edit mode, 0: Navigate mode
    # 1: Focus prev if focused on deletion. 0: Focus next if focused on deletion.
    refocus_policy: int = ...
    # 1: Focus next/prev can wrap at end of list. 0: Focus next/prev stops at end of list.
    wrap: int = ...


group_t = _group_t


class _obj_spec_attr_t:
    # Store the pointer of the children in an array.
    children: List["_obj_t"] = ...
    child_cnt: int = ...  # Number of children
    group_p: group_t = ...

    # Dynamically allocated event callback and user data array
    event_dsc: _event_dsc_t = ...
    scroll: point_t = ...  # The current X/Y scroll offset

    ext_click_pad: coord_t = ...  # Extra click padding in all direction
    # EXTend the size in every direction for drawing.
    ext_draw_size: coord_t = ...

    scrollbar_mode: scrollbar_mode_t = ...  # How to display scrollbars
    # Where to align the snappable children horizontally
    scroll_snap_x: scroll_snap_t = ...
    # Where to align the snappable children vertically
    scroll_snap_y: scroll_snap_t = ...
    scroll_dir: dir_t = ...  # The allowed scroll direction(s)
    # Number of event callbacks stored in `event_dsc` array
    event_dsc_cnt: int = ...
    # Cache the layer type here. Element of @lv_intermediate_layer_type_t
    layer_type: int = ...


"""
typedef struct _lv_obj_t {
    const lv_obj_class_t * class_p;
    struct _lv_obj_t * parent;
    _lv_obj_spec_attr_t * spec_attr;
    _lv_obj_style_t * styles;
#if LV_USE_USER_DATA
    void * user_data;
#endif
    lv_area_t coords;
    lv_obj_flag_t flags;
    lv_state_t state;
    uint16_t layout_inv : 1;
    uint16_t scr_layout_inv : 1;
    uint16_t skip_trans : 1;
    uint16_t style_cnt  : 6;
    uint16_t h_layout   : 1;
    uint16_t w_layout   : 1;
} lv_obj_t;


"""


class color_format_t(int):
    ...


# Keep original format. Used in color conversation
COLOR_FORMAT_NATIVE: color_format_t = ...
COLOR_FORMAT_NATIVE_REVERSE: color_format_t = ...  # Change endianess

_COLOR_FORMAT_NATIVE_END: color_format_t = ...
COLOR_FORMAT_RGB232: color_format_t = ...
COLOR_FORMAT_RGBA2328: color_format_t = ...
COLOR_FORMAT_RGBA2222: color_format_t = ...

COLOR_FORMAT_RGB565: color_format_t = ...
COLOR_FORMAT_RGBA5658: color_format_t = ...
COLOR_FORMAT_RGBA5551: color_format_t = ...
COLOR_FORMAT_RGBA4444: color_format_t = ...
COLOR_FORMAT_RGB565A8: color_format_t = ...

COLOR_FORMAT_RGB888: color_format_t = ...
COLOR_FORMAT_RGBA8888: color_format_t = ...
COLOR_FORMAT_RGBX8888: color_format_t = ...

COLOR_FORMAT_L1: color_format_t = ...
COLOR_FORMAT_L2: color_format_t = ...
COLOR_FORMAT_L4: color_format_t = ...
COLOR_FORMAT_L8: color_format_t = ...

COLOR_FORMAT_A1: color_format_t = ...
COLOR_FORMAT_A2: color_format_t = ...
COLOR_FORMAT_A4: color_format_t = ...
COLOR_FORMAT_A8: color_format_t = ...

COLOR_FORMAT_I1: color_format_t = ...
COLOR_FORMAT_I2: color_format_t = ...
COLOR_FORMAT_I4: color_format_t = ...
COLOR_FORMAT_I8: color_format_t = ...

# Custom formats can be added from here
COLOR_FORMAT_CUSTOM_START: color_format_t = ...


class color1_t:
    class ch:
        blue: int = ...
        green: int = ...
        red: int = ...

    full: int = ...


class color8_t:
    class ch:
        blue: int = ...
        green: int = ...
        red: int = ...

    full: int = ...


class color16_t:
    class ch:
        blue: int = ...
        green: int = ...
        red: int = ...

    full: int = ...


class color32_t:
    class ch:
        blue: int = ...
        green: int = ...
        red: int = ...
        alpha: int = ...

    full: int = ...


color_t: Union[color1_t, color8_t, color16_t, color32_t] = ...


class color_hsv_t:
    h: int = ...
    s: int = ...
    v: int = ...


color_filter_cb_t: Callable = ...


class _color_filter_dsc_t:
    filter_cb: color_filter_cb_t = ...
    user_data = ...


color_filter_dsc_t = _color_filter_dsc_t


class font_glyph_dsc_t:
    resolved_font: "_font_t" = ...  # Pointer to a font where the glyph was actually found after handling fallbacks
    adv_w: int = ...  # The glyph needs this space. Draw the next glyph after this width.
    box_w: int = ...  # Width of the glyph's bounding box
    box_h: int = ...  # Height of the glyph's bounding box
    ofs_x: int = ...  # x offset of the bounding box
    ofs_y: int = ...  # y offset of the bounding box
    bpp: int = ...  # Bit-per-pixel: 1, 2, 4, 8
    is_placeholder: int = ...  # Glyph is missing. But placeholder will still be displayed 


class _font_t:

    # Get a glyph's descriptor from a font
    def get_glyph_dsc(self, letter: int, letter_next: int) -> font_glyph_dsc_t:
        ...

    # Get a glyph's bitmap from a font
    def get_glyph_bitmap(self) -> int:
        ...

    # Pointer to the font in a font pack (must have the same line height)
    line_height: coord_t = ...  # The real line height where any text fits
    base_line: coord_t = ...  # Base line measured from the top of the line_height
    subpx: int = ...  # An element of `lv_font_subpx_t`

    nderline_position: int = ...  # Distance between the top of the underline and base line (< 0 means below the base line)
    underline_thickness: int = ...  # Thickness of the underline

    dsc = ...  # Store implementation specific or run_time data or caching here
    fallback: "_font_t" = ...  # Fallback font for missing glyph. Resolved recursively
    user_data = ...  # Custom user data for font.


font_t = _font_t


class _disp_draw_buf_t:
    # First display buffer.
    buf1: List = ...
    # Second display buffer.
    buf2: List = ...

    # Internal, used by the library
    buf_act: List = ...
    # In pixel count
    size: int = ...

    # 1: flushing is in progress. (It can't be a bit field because when it's 
    # cleared from IRQ Read-Modify-Write issue might occur)
    flushing: int = ...
    # 1: It was the last chunk to flush. (It can't be a bit field because when 
    # it's cleared from IRQ Read-Modify-Write issue might occur)
    flushing_last: int = ...
    # 1: the last area is being rendered
    last_area: int = ...
    # 1: the last part of the current area is being rendered
    last_part: int = ...


disp_draw_buf_t = _disp_draw_buf_t


class disp_rot_t(int):
    ...


DISP_ROT_NONE: disp_rot_t = ...
DISP_ROT_90: disp_rot_t = ...
DISP_ROT_180: disp_rot_t = ...
DISP_ROT_270: disp_rot_t = ...


class blend_mode_t(int):
    ...


class text_decor_t(int):
    ...


class border_side_t(int):
    ...


class grad_dir_t(int):
    ...


class dither_mode_t(int):
    ...


class style_prop_t(int):
    ...


class style_res_t(int):
    ...


class opa_t(int):
    ...


class gradient_stop_t:
    color: color_t = ...  # The stop color
    frac: int = ...  # The stop position in 1/255 unit


class grad_dsc_t:
    stops: List[gradient_stop_t] = ...  # A gradient stop array 
    stops_count: int = ...  # The number of used stops in the array
    dir: grad_dir_t = ...  # The gradient direction. Any of LV_GRAD_DIR_HOR, LV_GRAD_DIR_VER, LV_GRAD_DIR_NONE
    dither: dither_mode_t = ...  # Whether to dither the gradient or not. Any of LV_DITHER_NONE, LV_DITHER_ORDERED, LV_DITHER_ERR_DIFF


class draw_rect_dsc_t:
    radius: coord_t = ...
    blend_mode: blend_mode_t = ...

    # Background
    bg_opa: opa_t = ...
    bg_color: color_t = ...  # First element of a gradient is a color, so it maps well here
    bg_grad: grad_dsc_t = ...

    # Background img
    bg_img_src = ...
    bg_img_symbol_font = ...
    bg_img_recolor: color_t = ...
    bg_img_opa: opa_t = ...
    bg_img_recolor_opa: opa_t = ...
    bg_img_tiled: int = ...

    # Border
    border_color: color_t = ...
    border_width: coord_t = ...
    border_opa: opa_t = ...
    border_post: int = ...  # There is a border it will be drawn later.
    border_side: border_side_t = ...

    # Outline
    outline_color: color_t = ...
    outline_width: coord_t = ...
    outline_pad: coord_t = ...
    outline_opa: opa_t = ...

    # Shadow
    shadow_color: color_t = ...
    shadow_width: coord_t = ...
    shadow_ofs_x: coord_t = ...
    shadow_ofs_y: coord_t = ...
    shadow_spread: coord_t = ...
    shadow_opa: opa_t = ...


class draw_arc_dsc_t:
    color: color_t = ...
    width: coord_t = ...
    start_angle: int = ...
    end_angle: int = ...
    img_src = ...
    opa: opa_t = ...
    blend_mode: blend_mode_t = ...


class draw_img_dsc_t:
    angle: int = ...
    zoom: int = ...
    pivot: point_t = ...

    recolor: color_t = ...
    recolor_opa: opa_t = ...

    opa: opa_t = ...
    blend_mode: blend_mode_t = ...

    frame_id: int = ...
    antialias: int = ...


class img_cf_t(int):
    ...


class _draw_layer_ctx_t:
    area_full: area_t = ...
    area_act: area_t = ...
    max_row_with_alpha: coord_t = ...
    max_row_with_no_alpha: coord_t = ...
    buf = ...

    class original:
        clip_area: area_t = ...
        buf_area: area_t = ...
        buf = ...
        render_with_alpha: bool = ...


draw_layer_ctx_t = _draw_layer_ctx_t


class draw_layer_flags_t(int):
    ...


class res_t(int):
    ...


class _draw_ctx_t:
    # Pointer to a buffer to draw into
    buf = ...

    # The position and size of `buf` (absolute coordinates)
    buf_area: area_t = ...

    # The current clip area with absolute coordinates, always the same or 
    # smaller than `buf_area`
    clip_area: area_t = ...

    # If true and Alpha byte will be appended to the colors.
    # It might make rendering slower.
    render_with_alpha: bool = ...

    # The rendered image in draw_ctx->buf will be converted to this format
    # using draw_ctx->buffer_convert.
    color_format: color_format_t = ...

    def draw_rect(self, dsc: draw_rect_dsc_t, coords: area_t) -> None:
        ...

    def draw_arc(
            self,
            dsc: draw_arc_dsc_t,
            center: point_t,
            radius: int,
            start_angle: int,
            end_angle: int
    ) -> None:
        ...

    def draw_img_decoded(
            self,
            dsc: draw_arc_dsc_t,
            coords: area_t,
            map_p: int,
            color_format: img_cf_t
    ) -> None:
        ...

    def draw_img(self, dsc: draw_arc_dsc_t, coords: area_t, src) -> res_t:
        ...

    def draw_letter(
            self,
            dsc: draw_arc_dsc_t,
            pos_p: point_t,
            letter: int
    ) -> None:
        ...

    def draw_line(
            self,
            dsc: draw_arc_dsc_t,
            point1: point_t,
            point2: point_t
    ) -> None:
        ...

    def draw_polygon(
            self,
            dsc: draw_arc_dsc_t,
            points: List[point_t],
            point_cnt: int
    ) -> None:
        ...

    def draw_transform(
            self,
            dest_area: area_t,
            src_buf,
            src_w: coord_t,
            src_h: coord_t,
            src_stride: coord_t,
            draw_dsc: draw_img_dsc_t,
            cf: img_cf_t,
            cbuf: color_t,
            abuf: opa_t
    ) -> None:
        ...

    # Replace the buffer with a rect without decoration like radius or borders
    def draw_bg(self, draw_dsc: draw_rect_dsc_t, coords: area_t) -> None:
        ...

    # Wait until all background operations are finished. (E.g. GPU operations)
    def wait_for_finish(self) -> None:
        ...

    def buffer_copy(
            self,
            dest_buf,
            dest_stride: coord_t,
            dest_area: area_t,
            src_buf,
            src_stride: coord_t,
            src_area: area_t
    ) -> None:
        ...

    def buffer_convert(self) -> None:
        ...

    def layer_init(
            self,
            layer_ctx: _draw_layer_ctx_t,
            flags: draw_layer_flags_t
    ) -> _draw_layer_ctx_t:
        ...

    def layer_adjust(
            self,
            layer_ctx: _draw_layer_ctx_t,
            flags: draw_layer_flags_t
    ) -> None:
        ...

    def layer_blend(
            self,
            layer_ctx: _draw_layer_ctx_t,
            draw_dsc: draw_img_dsc_t
    ) -> None:
        ...

    def layer_destroy(self, layer_ctx: draw_layer_ctx_t) -> None:
        ...

    # Size of a layer context in bytes.
    layer_instance_size: int = ...

    user_data = ...


draw_ctx_t = _draw_ctx_t


# Display Driver structure to be registered by HAL.
# Only its pointer will be saved in `lv_disp_t` so it should be declared as
# `static lv_disp_drv_t my_drv` or allocated dynamically.

class _disp_drv_t:
    hor_res: coord_t = ...  # Horizontal resolution.
    ver_res: coord_t = ...  # Vertical resolution.

    # Horizontal resolution of the full / physical display. Set to -1 
    # for fullscreen mode.
    physical_hor_res: coord_t = ...
    # Vertical resolution of the full / physical display. Set to -1 
    # for fullscreen mode.
    physical_ver_res: coord_t = ...
    # Horizontal offset from the full / physical display. Set to 0 
    # for fullscreen mode.
    offset_x: coord_t = ...
    # Vertical offset from the full / physical display. Set to 0 
    # for fullscreen mode.
    offset_y: coord_t = ...

    # Pointer to a buffer initialized with `lv_disp_draw_buf_init()`.
    # LVGL will use this buffer(s) to draw the screens contents
    draw_buf: disp_draw_buf_t = ...

    # 1: Use screen-sized buffers and draw to absolute coordinates
    direct_mode: int = ...
    full_refresh: int = ...  # 1: Always make the whole screen redrawn
    sw_rotate: int = ...  # 1: use software rotation (slower)
    antialiasing: int = ...  # 1: anti-aliasing is enabled on this display.
    # 1: turn the display by 90 degree. @warning Does not update 
    # coordinates for you!
    rotated: int = ...
    # Handle if the screen doesn't have a solid (opa == LV_OPA_COVER) 
    # background. Use only if required because it's slower.
    screen_transp: int = ...

    # DPI (dot per inch) of the display. Default value is `LV_DPI_DEF`.
    dpi: int = ...

    color_format: color_format_t = ...

    # MANDATORY: Write the internal buffer (draw_buf) to the display. 
    # 'lv_disp_flush_ready()' has to be called when finished
    def flush_cb(self, area: area_t, color_p: color_t) -> None:
        ...

    # OPTIONAL: Extend the invalidated areas to match with the display 
    # drivers requirements E.g. round `y` to, 8, 16 ..) on a monochrome display
    def rounder_cb(self, area: area_t) -> None:
        ...

    def clear_cb(self, buf: List[int], size: int) -> None:
        ...

    # OPTIONAL: Called after every refresh cycle to tell the rendering 
    # and flushing time + the number of flushed pixels
    def monitor_cb(self, time: int, px: int) -> None:
        ...

    # OPTIONAL: Called periodically while lvgl waits for operation to be 
    # completed. For example flushing or GPU User can execute very 
    # simple tasks here or yield the task
    def wait_cb(self) -> None:
        ...

    # OPTIONAL: Called when lvgl needs any CPU cache that affects 
    # rendering to be cleaned
    def clean_dcache_cb(self) -> None:
        ...

    # OPTIONAL: called when driver parameters are updated
    def drv_update_cb(self) -> None:
        ...

    # OPTIONAL: called when start rendering
    def render_start_cb(self) -> None:
        ...

    # On CHROMA_KEYED images this color will be transparent. 
    # `LV_COLOR_CHROMA_KEY` by default. (lv_conf.h)
    color_chroma_key: color_t = ...

    draw_ctx: draw_ctx_t = ...

    def draw_ctx_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_ctx_deinit(self, draw_ctx: draw_ctx_t) -> None:
        ...

    draw_ctx_size: int = ...

    user_data = None  # Custom display driver user data


disp_drv_t = _disp_drv_t


class _timer_t:
    period: int = ...  # How often the timer should run
    last_run: int = ...  # Last time the timer ran

    def timer_cb(self) -> None:
        ...

    user_data = ...  # Custom user data
    repeat_count: int = ...  # 1: One time;  -1 : infinity;  n>0: residual times
    paused: int = ...


timer_t = _timer_t


class _theme_t:

    def apply_cb(self, _: "obj_t") -> None:
        ...

    parent: "_theme_t" = ...  # Apply the current theme's style on top of this theme.
    user_data = ...
    disp: "_disp_t" = ...
    color_primary: color_t = ...
    color_secondary: color_t = ...
    font_small: font_t = ...
    font_normal: font_t = ...
    font_large: font_t = ...
    flags: int = ...  # Any custom flag used by the theme


theme_t = _theme_t


class _disp_t:
    # Driver to the display
    driver: _disp_drv_t = ...

    # A timer which periodically checks the dirty areas and refreshes them
    refr_timer: timer_t = ...

    # The theme assigned to the screen
    theme: _theme_t = ...

    # Screens of the display
    screens: List[_obj_t] = ...  # Array of screen objects.
    act_scr: _obj_t = ...  # Currently active screen on this display
    prev_scr: _obj_t = ...  # Previous screen. Used during screen animations
    scr_to_load: _obj_t = ...  # The screen prepared to load in lv_scr_load_anim
    top_layer: _obj_t = ...  # @see lv_disp_get_layer_top
    sys_layer: _obj_t = ...  # @see lv_disp_get_layer_sys
    screen_cnt: int = ...
    _over_act: int = ...  # 1: Draw previous screen over active screen
    del_prev: int = ...  # 1: Automatically delete the previous screen when the screen load animation is ready
    rendering_in_progress: int = ...  # 1: The current screen rendering is in progress

    bg_opa: opa_t = ...  # Opacity of the background color or wallpaper
    bg_color: color_t = ...  # Default display color when screens are transparent
    bg_img = ...  # An image source to display as wallpaper

    # Invalidated (marked to redraw) areas
    inv_areas: List[area_t] = ...
    inv_area_joined: List[int] = ...
    inv_p: int = ...
    inv_en_cnt: int = ...

    # Miscellaneous data
    last_activity_time: int = ...  # Last time when there was activity on this display

    # Last render start time(ms) on this display 
    last_render_start_time: int = ...

    def dpx(self, n: int) -> int:
        """
        Scale the given number of pixels (a distance or size)

        This is relative to a 160 DPI display considering the DPI of the given
        display. It ensures that e.g. `lv_dpx(100)` will have the same physical
        size regardless to the DPI of the display.

        :param n: the number of pixels to scale
        :return: `n x current_dpi / 160`
        """

    def get_scr_act(self):
        """
        Return the active screen

        :return: active screen object (loaded by 'lv_scr_load()')
        """

    def get_scr_prev(self):
        """
        Return the previous screen. Only used during screen transitions.

        :return: previous screen object or NULL if not used now
        """

    def load_scr(self, scr):
        """
        Make a screen active
        :param scr: screen
        """

    def get_layer_top(self):
        """
        Return with the top layer. (Same on every screen and it is above the normal screen layer)

        :return: the top layer object (transparent screen sized lv_obj)
        """

    def get_layer_sys(self):
        """
        Return with the sys. layer. (Same on every screen and it is above the normal screen and the top layer)
        :return: sys layer object (transparent screen sized lv_obj)
        """

    def set_theme(self, th: theme_t) -> None:
        """
        Set the theme of a display

        :param th:
        """
      
    def get_theme(self) -> theme_t:
        """
        Get the theme of a display

        :return: the display's theme (can be NULL)
        """
        if disp is None:
            disp = disp_get_default()

        return disp.theme

    def set_bg_color(color: color_t) -> None:
        """
        Set the background color of a display

        :param color: color of the background
        """

    def set_bg_image(self, img_src) -> None:
        """
        Set the background image of a display

        :param img_src: img_src path to file or an `img_dsc_t` instance
        """

    def set_bg_opa(self, opa: opa_t) -> None:
        """
        Set opacity of the background

        :param opa: opacity (0..255)
        """

    def get_chroma_key_color(self) -> color_t:
       ...


disp_t = _disp_t


class _style_state_cmp_t(int):
    ...


class style_selector_t(int):
    ...


class style_value_t:
    num: int = ...  #  Number integer number (opacity, enums, booleans or "normal" numbers)
    ptr = ...  # Constant pointers  (font, cone text, etc)
    color: color_t = ...  # Colors


class style_transition_dsc_t:
    props: style_prop_t = ...  # An array with the properties to animate.
    user_data = ...  # A custom user data that will be passed to the animation's user_data 

    path_xcb: anim_path_cb_t = ...  # A path for the animation.
    time: int = ...  # Duration of the transition in [ms]
    delay: int = ...  # Delay before the transition in [ms]


class style_const_prop_t:
    prop_ptr: style_prop_t = ...
    value: style_value_t = ...


class style_t:
    sentinel: int = ...

    # If there is only one property store it directly. For more properties allocate an array
    class v_p:
        value1: style_value_t = ...
        values_and_props: int = ...
        const_props: style_const_prop_t = ...

    prop1: int = ...
    has_group: int = ...
    prop_cnt: int = ...


class _obj_style_t:
    style: style_t = ...
    selector: int = ...
    is_local: int = ...
    is_trans: int = ...


class anim_path_cb_t:
    ...


class _obj_style_transition_dsc_t:
    time: int = ...
    delay: int = ...
    selector: style_selector_t = ...
    prop: style_prop_t = ...

    path_cb: anim_path_cb_t = ...
    user_data = ...


class _obj_class_t:
    base_class: "_obj_class_t" = ...

    def constructor_cb(self, obj: _obj_t) -> None:
        ...

    def destructor_cb(self, obj: _obj_t) -> None:
        ...

    user_data = ...

    def event_cb(
            self,
            e: _event_t
    ) -> None:  # Widget type specific event function
        ...

    width_def: coord_t = ...
    height_def: coord_t = ...
    editable: int = ...  # Value from ::lv_obj_class_editable_t
    group_def: int = ...  # Value from ::lv_obj_class_group_def_t
    instance_size: int = ...


obj_class_t = _obj_class_t


class RES:
    INV: int = ...
    OK: int = ...


class LOG_LEVEL:
    TRACE: int = ...
    INFO: int = ...
    WARN: int = ...
    ERROR: int = ...
    USER: int = ...
    NONE: int = ...


class ALIGN:
    DEFAULT: int = ...
    TOP_LEFT: int = ...
    TOP_MID: int = ...
    TOP_RIGHT: int = ...
    BOTTOM_LEFT: int = ...
    BOTTOM_MID: int = ...
    BOTTOM_RIGHT: int = ...
    LEFT_MID: int = ...
    RIGHT_MID: int = ...
    CENTER: int = ...
    OUT_TOP_LEFT: int = ...
    OUT_TOP_MID: int = ...
    OUT_TOP_RIGHT: int = ...
    OUT_BOTTOM_LEFT: int = ...
    OUT_BOTTOM_MID: int = ...
    OUT_BOTTOM_RIGHT: int = ...
    OUT_LEFT_TOP: int = ...
    OUT_LEFT_MID: int = ...
    OUT_LEFT_BOTTOM: int = ...
    OUT_RIGHT_TOP: int = ...
    OUT_RIGHT_MID: int = ...
    OUT_RIGHT_BOTTOM: int = ...


class DIR:
    NONE: int = ...
    LEFT: int = ...
    RIGHT: int = ...
    TOP: int = ...
    BOTTOM: int = ...
    HOR: int = ...
    VER: int = ...
    ALL: int = ...


class COORD:
    MAX: int = ...
    MIN: int = ...


class FONT_SUBPX:
    NONE: int = ...
    HOR: int = ...
    VER: int = ...
    BOTH: int = ...


class OPA:
    TRANSP: int = ...
    _0: int = ...
    _10: int = ...
    _20: int = ...
    _30: int = ...
    _40: int = ...
    _50: int = ...
    _60: int = ...
    _70: int = ...
    _80: int = ...
    _90: int = ...
    _100: int = ...
    COVER: int = ...


class TEXT_FLAG:
    NONE: int = ...
    RECOLOR: int = ...
    EXPAND: int = ...
    FIT: int = ...


class TEXT_CMD_STATE:
    WAIT: int = ...
    PAR: int = ...
    IN: int = ...


class TEXT_ALIGN:
    AUTO: int = ...
    LEFT: int = ...
    CENTER: int = ...
    RIGHT: int = ...


class BASE_DIR:
    LTR: int = ...
    RTL: int = ...
    AUTO: int = ...
    NEUTRAL: int = ...
    WEAK: int = ...


class BLEND_MODE:
    NORMAL: int = ...
    ADDITIVE: int = ...
    SUBTRACTIVE: int = ...
    MULTIPLY: int = ...
    REPLACE: int = ...


class TEXT_DECOR:
    NONE: int = ...
    UNDERLINE: int = ...
    STRIKETHROUGH: int = ...


class BORDER_SIDE:
    NONE: int = ...
    BOTTOM: int = ...
    TOP: int = ...
    LEFT: int = ...
    RIGHT: int = ...
    FULL: int = ...
    INTERNAL: int = ...


class GRAD_DIR:
    NONE: int = ...
    VER: int = ...
    HOR: int = ...


class DITHER:
    NONE: int = ...
    ORDERED: int = ...
    ERR_DIFF: int = ...


class STYLE:
    PROP_INV: int = ...
    WIDTH: int = ...
    MIN_WIDTH: int = ...
    MAX_WIDTH: int = ...
    HEIGHT: int = ...
    MIN_HEIGHT: int = ...
    MAX_HEIGHT: int = ...
    X: int = ...
    Y: int = ...
    ALIGN: int = ...
    LAYOUT: int = ...
    RADIUS: int = ...
    PAD_TOP: int = ...
    PAD_BOTTOM: int = ...
    PAD_LEFT: int = ...
    PAD_RIGHT: int = ...
    PAD_ROW: int = ...
    PAD_COLUMN: int = ...
    BASE_DIR: int = ...
    CLIP_CORNER: int = ...
    BG_COLOR: int = ...
    BG_OPA: int = ...
    BG_GRAD_COLOR: int = ...
    BG_GRAD_DIR: int = ...
    BG_MAIN_STOP: int = ...
    BG_GRAD_STOP: int = ...
    BG_GRAD: int = ...
    BG_DITHER_MODE: int = ...
    BG_IMG_SRC: int = ...
    BG_IMG_OPA: int = ...
    BG_IMG_RECOLOR: int = ...
    BG_IMG_RECOLOR_OPA: int = ...
    BG_IMG_TILED: int = ...
    BORDER_COLOR: int = ...
    BORDER_OPA: int = ...
    BORDER_WIDTH: int = ...
    BORDER_SIDE: int = ...
    BORDER_POST: int = ...
    OUTLINE_WIDTH: int = ...
    OUTLINE_COLOR: int = ...
    OUTLINE_OPA: int = ...
    OUTLINE_PAD: int = ...
    SHADOW_WIDTH: int = ...
    SHADOW_OFS_X: int = ...
    SHADOW_OFS_Y: int = ...
    SHADOW_SPREAD: int = ...
    SHADOW_COLOR: int = ...
    SHADOW_OPA: int = ...
    IMG_OPA: int = ...
    IMG_RECOLOR: int = ...
    IMG_RECOLOR_OPA: int = ...
    LINE_WIDTH: int = ...
    LINE_DASH_WIDTH: int = ...
    LINE_DASH_GAP: int = ...
    LINE_ROUNDED: int = ...
    LINE_COLOR: int = ...
    LINE_OPA: int = ...
    ARC_WIDTH: int = ...
    ARC_ROUNDED: int = ...
    ARC_COLOR: int = ...
    ARC_OPA: int = ...
    ARC_IMG_SRC: int = ...
    TEXT_COLOR: int = ...
    TEXT_OPA: int = ...
    TEXT_FONT: int = ...
    TEXT_LETTER_SPACE: int = ...
    TEXT_LINE_SPACE: int = ...
    TEXT_DECOR: int = ...
    TEXT_ALIGN: int = ...
    OPA: int = ...
    COLOR_FILTER_DSC: int = ...
    COLOR_FILTER_OPA: int = ...
    ANIM: int = ...
    ANIM_TIME: int = ...
    ANIM_SPEED: int = ...
    TRANSITION: int = ...
    BLEND_MODE: int = ...
    TRANSFORM_WIDTH: int = ...
    TRANSFORM_HEIGHT: int = ...
    TRANSLATE_X: int = ...
    TRANSLATE_Y: int = ...
    TRANSFORM_ZOOM: int = ...
    TRANSFORM_ANGLE: int = ...
    TRANSFORM_PIVOT_X: int = ...
    TRANSFORM_PIVOT_Y: int = ...
    PROP_ANY: int = ...


class STYLE_RES:
    NOT_FOUND: int = ...
    FOUND: int = ...
    INHERIT: int = ...


class FS_RES:
    OK: int = ...
    HW_ERR: int = ...
    FS_ERR: int = ...
    NOT_EX: int = ...
    FULL: int = ...
    LOCKED: int = ...
    DENIED: int = ...
    BUSY: int = ...
    TOUT: int = ...
    NOT_IMP: int = ...
    OUT_OF_MEM: int = ...
    INV_PARAM: int = ...
    UNKNOWN: int = ...


class FS_MODE:
    WR: int = ...
    RD: int = ...


class DRAW_MASK_RES:
    TRANSP: int = ...
    FULL_COVER: int = ...
    CHANGED: int = ...
    UNKNOWN: int = ...


class DRAW_MASK_TYPE:
    LINE: int = ...
    ANGLE: int = ...
    RADIUS: int = ...
    FADE: int = ...
    MAP: int = ...
    POLYGON: int = ...


class DRAW_MASK_LINE_SIDE:
    LEFT: int = ...
    RIGHT: int = ...
    TOP: int = ...
    BOTTOM: int = ...


class STATE:
    DEFAULT: int = ...
    CHECKED: int = ...
    FOCUSED: int = ...
    FOCUS_KEY: int = ...
    EDITED: int = ...
    HOVERED: int = ...
    PRESSED: int = ...
    SCROLLED: int = ...
    DISABLED: int = ...
    USER_1: int = ...
    USER_2: int = ...
    USER_3: int = ...
    USER_4: int = ...
    ANY: int = ...


class PART:
    MAIN: int = ...
    SCROLLBAR: int = ...
    INDICATOR: int = ...
    KNOB: int = ...
    SELECTED: int = ...
    ITEMS: int = ...
    TICKS: int = ...
    CURSOR: int = ...
    CUSTOM_FIRST: int = ...
    ANY: int = ...


class SCROLLBAR_MODE:
    OFF: int = ...
    ON: int = ...
    ACTIVE: int = ...
    AUTO: int = ...


class SCROLL_SNAP:
    NONE: int = ...
    START: int = ...
    END: int = ...
    CENTER: int = ...


class KEY:
    UP: int = ...
    DOWN: int = ...
    RIGHT: int = ...
    LEFT: int = ...
    ESC: int = ...
    DEL: int = ...
    BACKSPACE: int = ...
    ENTER: int = ...
    NEXT: int = ...
    PREV: int = ...
    HOME: int = ...
    END: int = ...


class FONT_FMT_TXT_CMAP:
    FORMAT0_FULL: int = ...
    SPARSE_FULL: int = ...
    FORMAT0_TINY: int = ...
    SPARSE_TINY: int = ...


class ANIM_IMG_PART:
    MAIN: int = ...


class SPAN_OVERFLOW:
    CLIP: int = ...
    ELLIPSIS: int = ...


class SPAN_MODE:
    FIXED: int = ...
    EXPAND: int = ...
    BREAK: int = ...


class PART_TEXTAREA:
    PLACEHOLDER: int = ...


class ANIM:
    OFF: int = ...
    ON: int = ...


class COLOR_FORMAT:
    NATIVE: int = ...
    NATIVE_REVERSE: int = ...
    RGB232: int = ...
    RGBA2328: int = ...
    RGBA2222: int = ...
    RGB565: int = ...
    RGBA5658: int = ...
    RGBA5551: int = ...
    RGBA4444: int = ...
    RGB565A8: int = ...
    RGB888: int = ...
    RGBA8888: int = ...
    RGBX8888: int = ...
    L1: int = ...
    L2: int = ...
    L4: int = ...
    L8: int = ...
    A1: int = ...
    A2: int = ...
    A4: int = ...
    A8: int = ...
    I1: int = ...
    I2: int = ...
    I4: int = ...
    I8: int = ...
    CUSTOM_START: int = ...


class PALETTE:
    RED: int = ...
    PINK: int = ...
    PURPLE: int = ...
    DEEP_PURPLE: int = ...
    INDIGO: int = ...
    BLUE: int = ...
    LIGHT_BLUE: int = ...
    CYAN: int = ...
    TEAL: int = ...
    GREEN: int = ...
    LIGHT_GREEN: int = ...
    LIME: int = ...
    YELLOW: int = ...
    AMBER: int = ...
    ORANGE: int = ...
    DEEP_ORANGE: int = ...
    BROWN: int = ...
    BLUE_GREY: int = ...
    GREY: int = ...
    NONE: int = ...


class FS_SEEK:
    SET: int = ...
    CUR: int = ...
    END: int = ...


class DRAW_LAYER_FLAG:
    NONE: int = ...
    HAS_ALPHA: int = ...
    CAN_SUBDIVIDE: int = ...


class DISP_ROT:
    NONE: int = ...
    _90: int = ...
    _180: int = ...
    _270: int = ...


class INDEV_TYPE:
    NONE: int = ...
    POINTER: int = ...
    KEYPAD: int = ...
    BUTTON: int = ...
    ENCODER: int = ...


class INDEV_STATE:
    RELEASED: int = ...
    PRESSED: int = ...


class COVER_RES:
    COVER: int = ...
    NOT_COVER: int = ...
    MASKED: int = ...


class LAYER_TYPE:
    NONE: int = ...
    SIMPLE: int = ...
    TRANSFORM: int = ...


class EVENT:
    ALL: int = ...
    PRESSED: int = ...
    PRESSING: int = ...
    PRESS_LOST: int = ...
    SHORT_CLICKED: int = ...
    LONG_PRESSED: int = ...
    LONG_PRESSED_REPEAT: int = ...
    CLICKED: int = ...
    RELEASED: int = ...
    SCROLL_BEGIN: int = ...
    SCROLL_THROW_BEGIN: int = ...
    SCROLL_END: int = ...
    SCROLL: int = ...
    GESTURE: int = ...
    KEY: int = ...
    FOCUSED: int = ...
    DEFOCUSED: int = ...
    LEAVE: int = ...
    HIT_TEST: int = ...
    COVER_CHECK: int = ...
    REFR_EXT_DRAW_SIZE: int = ...
    DRAW_MAIN_BEGIN: int = ...
    DRAW_MAIN: int = ...
    DRAW_MAIN_END: int = ...
    DRAW_POST_BEGIN: int = ...
    DRAW_POST: int = ...
    DRAW_POST_END: int = ...
    DRAW_PART_BEGIN: int = ...
    DRAW_PART_END: int = ...
    VALUE_CHANGED: int = ...
    INSERT: int = ...
    REFRESH: int = ...
    READY: int = ...
    CANCEL: int = ...
    DELETE: int = ...
    CHILD_CHANGED: int = ...
    CHILD_CREATED: int = ...
    CHILD_DELETED: int = ...
    SCREEN_UNLOAD_START: int = ...
    SCREEN_LOAD_START: int = ...
    SCREEN_LOADED: int = ...
    SCREEN_UNLOADED: int = ...
    SIZE_CHANGED: int = ...
    STYLE_CHANGED: int = ...
    LAYOUT_CHANGED: int = ...
    GET_SELF_SIZE: int = ...
    MSG_RECEIVED: int = ...
    PREPROCESS: int = ...


class GROUP_REFOCUS_POLICY:
    NEXT: int = ...
    PREV: int = ...


class SCR_LOAD_ANIM:
    NONE: int = ...
    OVER_LEFT: int = ...
    OVER_RIGHT: int = ...
    OVER_TOP: int = ...
    OVER_BOTTOM: int = ...
    MOVE_LEFT: int = ...
    MOVE_RIGHT: int = ...
    MOVE_TOP: int = ...
    MOVE_BOTTOM: int = ...
    FADE_IN: int = ...
    FADE_ON: int = ...
    FADE_OUT: int = ...
    OUT_LEFT: int = ...
    OUT_RIGHT: int = ...
    OUT_TOP: int = ...
    OUT_BOTTOM: int = ...


class FONT_FMT_TXT:
    PLAIN: int = ...
    COMPRESSED: int = ...
    COMPRESSED_NO_PREFILTER: int = ...


class GRIDNAV_CTRL:
    NONE: int = ...
    ROLLOVER: int = ...
    SCROLL_FIRST: int = ...


class EXPLORER_SORT:
    NONE: int = ...
    KIND: int = ...


class EXPLORER:
    HOME_DIR: int = ...
    MUSIC_DIR: int = ...
    PICTURES_DIR: int = ...
    VIDEO_DIR: int = ...
    DOCS_DIR: int = ...
    FS_DIR: int = ...


class FLEX_ALIGN:
    START: int = ...
    END: int = ...
    CENTER: int = ...
    SPACE_EVENLY: int = ...
    SPACE_AROUND: int = ...
    SPACE_BETWEEN: int = ...


class FLEX_FLOW:
    ROW: int = ...
    COLUMN: int = ...
    ROW_WRAP: int = ...
    ROW_REVERSE: int = ...
    ROW_WRAP_REVERSE: int = ...
    COLUMN_WRAP: int = ...
    COLUMN_REVERSE: int = ...
    COLUMN_WRAP_REVERSE: int = ...


class GRID_ALIGN:
    START: int = ...
    CENTER: int = ...
    END: int = ...
    STRETCH: int = ...
    SPACE_EVENLY: int = ...
    SPACE_AROUND: int = ...
    SPACE_BETWEEN: int = ...


class SYMBOL:
    BULLET: int = ...
    AUDIO: int = ...
    VIDEO: int = ...
    LIST: int = ...
    OK: int = ...
    CLOSE: int = ...
    POWER: int = ...
    SETTINGS: int = ...
    HOME: int = ...
    DOWNLOAD: int = ...
    DRIVE: int = ...
    REFRESH: int = ...
    MUTE: int = ...
    VOLUME_MID: int = ...
    VOLUME_MAX: int = ...
    IMAGE: int = ...
    TINT: int = ...
    PREV: int = ...
    PLAY: int = ...
    PAUSE: int = ...
    STOP: int = ...
    NEXT: int = ...
    EJECT: int = ...
    LEFT: int = ...
    RIGHT: int = ...
    PLUS: int = ...
    MINUS: int = ...
    EYE_OPEN: int = ...
    EYE_CLOSE: int = ...
    WARNING: int = ...
    SHUFFLE: int = ...
    UP: int = ...
    DOWN: int = ...
    LOOP: int = ...
    DIRECTORY: int = ...
    UPLOAD: int = ...
    CALL: int = ...
    CUT: int = ...
    COPY: int = ...
    SAVE: int = ...
    BARS: int = ...
    ENVELOPE: int = ...
    CHARGE: int = ...
    PASTE: int = ...
    BELL: int = ...
    KEYBOARD: int = ...
    GPS: int = ...
    FILE: int = ...
    WIFI: int = ...
    BATTERY_FULL: int = ...
    BATTERY_3: int = ...
    BATTERY_2: int = ...
    BATTERY_1: int = ...
    BATTERY_EMPTY: int = ...
    USB: int = ...
    BLUETOOTH: int = ...
    TRASH: int = ...
    EDIT: int = ...
    BACKSPACE: int = ...
    SD_CARD: int = ...
    NEW_LINE: int = ...
    DUMMY: int = ...


class obj(object):

    def __init__(self, parent: obj_t = None):
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class img_header_t:
    h: int = ...
    w: int = ...
    reserved: int = ...
    always_zero: int = ...
    cf: int = ...


class img_dsc_t:
    header: img_header_t = ...
    data_size: int = ...
    data = List[int]


class img(object):

    def __init__(self, parent: obj_t = None):
        ...

    def buf_alloc(self, h: int, cf: int) -> img_dsc_t:
        ...

    def buf_get_px_color(self, x: int, y: int, color: color16_t) -> color16_t:
        ...

    def buf_get_px_alpha(self, x: int, y: int) -> int:
        ...

    def buf_set_px_color(self, x: int, y: int, c: color16_t) -> None:
        ...

    def buf_set_px_alpha(self, x: int, y: int, opa: int) -> None:
        ...

    def buf_set_palette(self, id: int, c: color16_t) -> None:
        ...

    def buf_free(self) -> None:
        ...

    def buf_get_img_size(self, h: int, cf: int) -> int:
        ...

    def decoder_get_info(self, header: img_header_t) -> int:
        ...

    def decoder_open(self, src, color: color16_t, frame_id: int) -> int:
        ...

    def decoder_read_line(self, x: int, y: int, len: int, buf) -> int:
        ...

    def decoder_close(self) -> None:
        ...

    def decoder_create(self) -> img_decoder_t:
        ...

    def decoder_delete(self) -> None:
        ...

    def decoder_set_info_cb(self, info_cb: Callable) -> None:
        ...

    def decoder_set_open_cb(self, open_cb: Callable) -> None:
        ...

    def decoder_set_read_line_cb(self, read_line_cb: Callable) -> None:
        ...

    def decoder_set_close_cb(self, close_cb: Callable) -> None:
        ...

    def decoder_built_in_info(self, src, header: img_header_t) -> int:
        ...

    def decoder_built_in_open(self, dsc: img_decoder_dsc_t) -> int:
        ...

    def decoder_built_in_read_line(
            self,
            dsc: img_decoder_dsc_t,
            x: int,
            y: int,
            len: int,
            buf
    ) -> int:
        ...

    def decoder_built_in_close(self, dsc: img_decoder_dsc_t) -> None:
        ...

    def cache_set_size(self) -> None:
        ...

    def cache_invalidate_src(self) -> None:
        ...

    def src_get_type(self) -> int:
        ...

    def cf_get_px_size(self) -> int:
        ...

    def cf_is_chroma_keyed(self) -> bool:
        ...

    def cf_has_alpha(self) -> bool:
        ...

    def set_src(self, src) -> None:
        ...

    def set_offset_x(self, x: int) -> None:
        ...

    def set_offset_y(self, x: int) -> None:
        ...

    def set_angle(self, angle: int) -> None:
        ...

    def set_pivot(self, x: int, y: int) -> None:
        ...

    def set_zoom(self, zoom: int) -> None:
        ...

    def set_antialias(self, antialias: bool) -> None:
        ...

    def set_size_mode(self, mode: int) -> None:
        ...

    def get_src(self) -> None:
        ...

    def get_offset_x(self) -> int:
        ...

    def get_offset_y(self) -> int:
        ...

    def get_angle(self) -> int:
        ...

    def get_pivot(self, pivot: point_t) -> None:
        ...

    def get_zoom(self) -> int:
        ...

    def get_antialias(self) -> bool:
        ...

    def get_size_mode(self) -> int:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CF:
        UNKNOWN: int = ...
        RAW: int = ...
        RAW_ALPHA: int = ...
        RAW_CHROMA_KEYED: int = ...
        TRUE_COLOR: int = ...
        TRUE_COLOR_ALPHA: int = ...
        TRUE_COLOR_CHROMA_KEYED: int = ...
        INDEXED_1BIT: int = ...
        INDEXED_2BIT: int = ...
        INDEXED_4BIT: int = ...
        INDEXED_8BIT: int = ...
        ALPHA_1BIT: int = ...
        ALPHA_2BIT: int = ...
        ALPHA_4BIT: int = ...
        ALPHA_8BIT: int = ...
        RGB888: int = ...
        RGBA8888: int = ...
        RGBX8888: int = ...
        RGB565: int = ...
        RGBA5658: int = ...
        RGB565A8: int = ...
        RESERVED_15: int = ...
        RESERVED_16: int = ...
        RESERVED_17: int = ...
        RESERVED_18: int = ...
        RESERVED_19: int = ...
        RESERVED_20: int = ...
        RESERVED_21: int = ...
        RESERVED_22: int = ...
        RESERVED_23: int = ...
        USER_ENCODED_0: int = ...
        USER_ENCODED_1: int = ...
        USER_ENCODED_2: int = ...
        USER_ENCODED_3: int = ...
        USER_ENCODED_4: int = ...
        USER_ENCODED_5: int = ...
        USER_ENCODED_6: int = ...
        USER_ENCODED_7: int = ...

    class SRC:
        VARIABLE: int = ...
        FILE: int = ...
        SYMBOL: int = ...
        UNKNOWN: int = ...

    class SIZE_MODE:
        VIRTUAL: int = ...
        REAL: int = ...



class anim(object):

    @staticmethod
    def core_init():
        ...

    def init(self):
        ...
    
    def set_var(self, var):
        ...
    
    def set_exec_cb(self, exec_cb: lv_anim_exec_xcb_t):
        ...
   
    def set_time(self, duration: int):
        ...
    
    def set_delay(self, delay: int):
        ...
    
    def set_values(self, start: int, end: int):
        ...
    
    def set_custom_exec_cb(self, exec_cb: lv_anim_custom_exec_cb_t):
        ...
   
    def set_path_cb(self, path_cb: lv_anim_path_cb_t):
        ...
   
    def set_start_cb(self, start_cb: lv_anim_start_cb_t):
        ...
    
    def set_get_value_cb(self, get_value_cb: lv_anim_get_value_cb_t):
        ...
   
    def set_ready_cb(self, ready_cb: lv_anim_ready_cb_t):
        ...
   
    def set_deleted_cb(self, deleted_cb: lv_anim_deleted_cb_t):
        ...
   
    def set_playback_time(self, time: int):
        ...
   
    def set_playback_delay(self, delay: int):
        ...
    
    def set_repeat_count(self, cnt: int):
        ...
   
    def set_repeat_delay(self, delay: int):
        ...
   
    def set_early_apply(self, en: bool):
        ...
    
    def set_user_data(self, user_data):
        ...
   
    def start(self) -> lv_anim_t:
        ...
    
    def get_delay(self) -> int:
        ...
   
    def get_playtime(self) -> int:
        ...
    
    def get_user_data(self):
        ...
   
    @staticmethod
    def _del(var, exec_cb: lv_anim_exec_xcb_t) -> bool:
        ...
    
    @staticmethod
    def del_all():
        ...
    
    @staticmethod
    def get(var, exec_cb: lv_anim_exec_xcb_t) -> lv_anim_t:
        ...
   
    @staticmethod
    def get_timer() -> _lv_timer_t:
        ...
    
    def custom_del(self, exec_cb: lv_anim_custom_exec_cb_t) -> bool:
        ...
   
    def custom_get(self, exec_cb: lv_anim_custom_exec_cb_t) -> lv_anim_t:
        ...
  
    @staticmethod
    def count_running() -> int:
        ...
    
    @staticmethod
    def speed_to_time(speed: int, start: int, end: int) -> int:
        ...
        
    @staticmethod
    def refr_now():
        ...
    
    def path_linear(self) -> int:
        ...
    
    def path_ease_in(self) -> int:
        ...

    def path_ease_out(self) -> int:
        ...
    
    def path_ease_in_out(self) -> int:
        ...
    
    def path_overshoot(self) -> int:
        ...
   
    def path_bounce(self) -> int:
        ...
    
    def path_step(self) -> int:
        ...


class animimg(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_src(self, dsc: List[img_dsc_t], num: int) -> None:
        ...

    def start(self) -> None:
        ...

    def set_duration(self, duration: int) -> None:
        ...

    def set_repeat_count(self, zoom: int) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class arc(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_start_angle(self, zoom: int) -> None:
        ...

    def set_end_angle(self, zoom: int) -> None:
        ...

    def set_angles(self, start: int, end: int) -> None:
        ...

    def set_bg_start_angle(self, zoom: int) -> None:
        ...

    def set_bg_end_angle(self, zoom: int) -> None:
        ...

    def set_bg_angles(self, start: int, end: int) -> None:
        ...

    def set_rotation(self, zoom: int) -> None:
        ...

    def set_mode(self, type: int) -> None:
        ...

    def set_value(self, angle: int) -> None:
        ...

    def set_range(self, min: int, max: int) -> None:
        ...

    def set_change_rate(self, zoom: int) -> None:
        ...

    def set_knob_offset(self, angle: int) -> None:
        ...

    def get_angle_start(self) -> int:
        ...

    def get_angle_end(self) -> int:
        ...

    def get_bg_angle_start(self) -> int:
        ...

    def get_bg_angle_end(self) -> int:
        ...

    def get_value(self) -> int:
        ...

    def get_min_value(self) -> int:
        ...

    def get_max_value(self) -> int:
        ...

    def get_mode(self) -> int:
        ...

    def get_rotation(self) -> int:
        ...

    def get_knob_offset(self) -> int:
        ...

    def align_obj_to_angle(self, obj_to_align: obj, r_offset: int) -> None:
        ...

    def rotate_obj_to_angle(self, obj_to_align: obj, r_offset: int) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: "obj") -> None:
        ...

    def set_tile(self, tile_obj: "obj", anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        BACKGROUND: int = ...
        FOREGROUND: int = ...
        KNOB: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class MODE:
        NORMAL: int = ...
        SYMMETRICAL: int = ...
        REVERSE: int = ...


class label(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_text(self, text: str) -> None:
        ...

    def set_text_static(self, text: str) -> None:
        ...

    def set_long_mode(self, long_mode: int) -> None:
        ...

    def set_recolor(self, antialias: bool) -> None:
        ...

    def set_text_selection_start(self, duration: int) -> None:
        ...

    def set_text_selection_end(self, duration: int) -> None:
        ...

    def get_text(self) -> str:
        ...

    def get_long_mode(self) -> int:
        ...

    def get_recolor(self) -> bool:
        ...

    def get_letter_pos(self, char_id: int, pos: point_t) -> None:
        ...

    def get_letter_on(self, pos_in: point_t) -> int:
        ...

    def is_char_under_pos(self, pos: point_t) -> bool:
        ...

    def get_text_selection_start(self) -> int:
        ...

    def get_text_selection_end(self) -> int:
        ...

    def ins_text(self, pos: int, txt: str) -> None:
        ...

    def cut_text(self, pos: int, cnt: int) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class LONG:
        WRAP: int = ...
        DOT: int = ...
        SCROLL: int = ...
        SCROLL_CIRCULAR: int = ...
        CLIP: int = ...


class bar(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_value(self, value: int, anim: int) -> None:
        ...

    def set_start_value(self, value: int, anim: int) -> None:
        ...

    def set_range(self, min: int, max: int) -> None:
        ...

    def set_mode(self, mode: int) -> None:
        ...

    def get_value(self) -> int:
        ...

    def get_start_value(self) -> int:
        ...

    def get_min_value(self) -> int:
        ...

    def get_max_value(self) -> int:
        ...

    def get_mode(self) -> int:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        INDICATOR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class MODE:
        NORMAL: int = ...
        SYMMETRICAL: int = ...
        RANGE: int = ...


class btn(object):

    def __init__(self, parent: obj_t = None):
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class btnmatrix(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_map(self, map: str) -> None:
        ...

    def set_ctrl_map(self, ctrl_map: List[btnmatrix_ctrl_t]) -> None:
        ...

    def set_selected_btn(self, zoom: int) -> None:
        ...

    def set_btn_ctrl(self, btn_id: int, ctrl: int) -> None:
        ...

    def clear_btn_ctrl(self, btn_id: int, ctrl: int) -> None:
        ...

    def set_btn_ctrl_all(self, ctrl: int) -> None:
        ...

    def clear_btn_ctrl_all(self, ctrl: int) -> None:
        ...

    def set_btn_width(self, btn_id: int, width: int) -> None:
        ...

    def set_one_checked(self, antialias: bool) -> None:
        ...

    def get_map(self) -> str:
        ...

    def get_selected_btn(self) -> int:
        ...

    def get_btn_text(self, btn_id: int) -> str:
        ...

    def has_btn_ctrl(self, btn_id: int, ctrl: int) -> bool:
        ...

    def get_one_checked(self) -> bool:
        ...

    def get_popovers(self) -> bool:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        BTN: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CTRL:
        HIDDEN: int = ...
        NO_REPEAT: int = ...
        DISABLED: int = ...
        CHECKABLE: int = ...
        CHECKED: int = ...
        CLICK_TRIG: int = ...
        POPOVER: int = ...
        RECOLOR: int = ...
        CUSTOM_1: int = ...
        CUSTOM_2: int = ...


class calendar(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_today_date(self, year: int, month: int, day: int) -> None:
        ...

    def set_showed_date(self, pos: int, cnt: int) -> None:
        ...

    def set_highlighted_dates(
            self,
            highlighted: List[calendar_date_t],
            date_num: int
    ) -> None:
        ...

    def set_day_names(self, day_names: str) -> None:
        ...

    def get_btnmatrix(self) -> obj:
        ...

    def get_today_date(self) -> calendar_date_t:
        ...

    def get_showed_date(self) -> calendar_date_t:
        ...

    def get_highlighted_dates(self) -> calendar_date_t:
        ...

    def get_highlighted_dates_num(self) -> int:
        ...

    def get_pressed_date(self, date: calendar_date_t) -> int:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class calendar_header_arrow(object):

    def __init__(self, parent: obj_t = None):
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class calendar_header_dropdown(object):

    def __init__(self, parent: obj_t = None):
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class canvas(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_px(self, x: int, y: int, c: color16_t) -> None:
        ...

    def set_buffer(self, buf, w: int, h: int, cf: int) -> None:
        ...

    def set_px_color(self, x: int, y: int, c: color16_t) -> None:
        ...

    def set_px_opa(self, x: int, y: int, opa: int) -> None:
        ...

    def set_palette(self, id: int, c: color16_t) -> None:
        ...

    def get_px(self, x: int, y: int) -> color16_t:
        ...

    def get_img(self) -> img_dsc_t:
        ...

    def copy_buf(self, to_copy, x: int, y: int, w: int, h: int) -> None:
        ...

    def transform(
            self,
            img: img_dsc_t,
            angle: int,
            zoom: int,
            offset_x: int,
            offset_y: int,
            pivot_x: int,
            pivot_y: int,
            antialias: bool
    ) -> None:
        ...

    def blur_hor(self, area: area_t, r: int) -> None:
        ...

    def blur_ver(self, area: area_t, r: int) -> None:
        ...

    def fill_bg(self, color: color16_t, opa: int) -> None:
        ...

    def draw_rect(
            self,
            x: int,
            y: int,
            w: int,
            h: int,
            draw_dsc: draw_rect_dsc_t
    ) -> None:
        ...

    def draw_text(
            self,
            x: int,
            y: int,
            max_w: int,
            draw_dsc: draw_label_dsc_t,
            txt: str
    ) -> None:
        ...

    def draw_img(self, x: int, y: int, src, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def draw_line(
            self,
            points: List[point_t],
            point_cnt: int,
            draw_dsc: draw_line_dsc_t
    ) -> None:
        ...

    def draw_polygon(
            self,
            points: List[point_t],
            point_cnt: int,
            draw_dsc: draw_rect_dsc_t
    ) -> None:
        ...

    def draw_arc(
            self,
            x: int,
            y: int,
            r: int,
            start_angle: int,
            end_angle: int,
            draw_dsc: draw_arc_dsc_t
    ) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class chart(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_type(self, type: int) -> None:
        ...

    def set_point_count(self, zoom: int) -> None:
        ...

    def set_range(self, axis: int, min: int, max: int) -> None:
        ...

    def set_update_mode(self, update_mode: int) -> None:
        ...

    def set_div_line_count(self, hdiv: int, vdiv: int) -> None:
        ...

    def set_zoom_x(self, zoom: int) -> None:
        ...

    def set_zoom_y(self, zoom: int) -> None:
        ...

    def get_zoom_x(self) -> int:
        ...

    def get_zoom_y(self) -> int:
        ...

    def set_axis_tick(
            self,
            axis: int,
            major_len: int,
            minor_len: int,
            major_cnt: int,
            minor_cnt: int,
            label_en: bool,
            draw_size: int
    ) -> None:
        ...

    def get_type(self) -> int:
        ...

    def get_point_count(self) -> int:
        ...

    def get_x_start_point(self, ser: chart_series_t) -> int:
        ...

    def get_point_pos_by_id(
            self,
            ser: chart_series_t,
            id: int,
            p_out: point_t
    ) -> None:
        ...

    def refresh(self) -> None:
        ...

    def add_series(self, color: color16_t, axis: int) -> chart_series_t:
        ...

    def remove_series(self, series: chart_series_t) -> None:
        ...

    def hide_series(self, series: chart_series_t, hide: bool) -> None:
        ...

    def set_series_color(
            self,
            series: chart_series_t,
            color: color16_t
    ) -> None:
        ...

    def set_x_start_point(self, ser: chart_series_t, id: int) -> None:
        ...

    def get_series_next(self, ser: chart_series_t) -> chart_series_t:
        ...

    def add_cursor(self, color: color16_t, dir: int) -> chart_cursor_t:
        ...

    def set_cursor_pos(self, cursor: chart_cursor_t, pos: point_t) -> None:
        ...

    def set_cursor_point(
            self,
            cursor: chart_cursor_t,
            ser: chart_series_t,
            point_id: int
    ) -> None:
        ...

    def get_cursor_point(self, cursor: chart_cursor_t) -> point_t:
        ...

    def set_all_value(self, ser: chart_series_t, value: int) -> None:
        ...

    def set_next_value(self, ser: chart_series_t, value: int) -> None:
        ...

    def set_next_value2(
            self,
            ser: chart_series_t,
            x_value: int,
            y_value: int
    ) -> None:
        ...

    def set_value_by_id(self, ser: chart_series_t, id: int, value: int) -> None:
        ...

    def set_value_by_id2(
            self,
            ser: chart_series_t,
            id: int,
            x_value: int,
            y_value: int
    ) -> None:
        ...

    def set_ext_y_array(
            self,
            ser: chart_series_t,
            array: List[coord_t]
    ) -> None:
        ...

    def set_ext_x_array(
            self,
            ser: chart_series_t,
            array: List[coord_t]
    ) -> None:
        ...

    def get_y_array(self, ser: chart_series_t) -> None:
        ...

    def get_x_array(self, ser: chart_series_t) -> None:
        ...

    def get_pressed_point(self) -> int:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        DIV_LINE_INIT: int = ...
        DIV_LINE_HOR: int = ...
        DIV_LINE_VER: int = ...
        LINE_AND_POINT: int = ...
        BAR: int = ...
        CURSOR: int = ...
        TICK_LABEL: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class TYPE:
        NONE: int = ...
        LINE: int = ...
        BAR: int = ...
        SCATTER: int = ...

    class UPDATE_MODE:
        SHIFT: int = ...
        CIRCULAR: int = ...

    class AXIS:
        PRIMARY_Y: int = ...
        SECONDARY_Y: int = ...
        PRIMARY_X: int = ...
        SECONDARY_X: int = ...


class checkbox(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_text(self, text: str) -> None:
        ...

    def set_text_static(self, text: str) -> None:
        ...

    def get_text(self) -> str:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        BOX: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class colorwheel(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_hsv(self, hsv: color_hsv_t) -> bool:
        ...

    def set_rgb(self, color: color16_t) -> bool:
        ...

    def set_mode(self, mode: int) -> None:
        ...

    def set_mode_fixed(self, antialias: bool) -> None:
        ...

    def get_hsv(self) -> color_hsv_t:
        ...

    def get_rgb(self) -> color16_t:
        ...

    def get_color_mode(self) -> int:
        ...

    def get_color_mode_fixed(self) -> bool:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class MODE:
        HUE: int = ...
        SATURATION: int = ...
        VALUE: int = ...


class dropdown(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_text(self, text: str) -> None:
        ...

    def set_options(self, text: str) -> None:
        ...

    def set_options_static(self, text: str) -> None:
        ...

    def add_option(self, option: str, pos: int) -> None:
        ...

    def clear_options(self) -> None:
        ...

    def set_selected(self, zoom: int) -> None:
        ...

    def set_dir(self, dir: int) -> None:
        ...

    def set_symbol(self, src) -> None:
        ...

    def set_selected_highlight(self, antialias: bool) -> None:
        ...

    def get_list(self) -> obj:
        ...

    def get_text(self) -> str:
        ...

    def get_options(self) -> str:
        ...

    def get_selected(self) -> int:
        ...

    def get_option_cnt(self) -> int:
        ...

    def get_selected_str(self, buf: str, buf_size: int) -> None:
        ...

    def get_option_index(self, option: str) -> int:
        ...

    def get_symbol(self) -> str:
        ...

    def get_selected_highlight(self) -> bool:
        ...

    def get_dir(self) -> int:
        ...

    def open(self) -> None:
        ...

    def close(self) -> None:
        ...

    def is_open(self) -> bool:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class imgbtn(object):
    
    def __init__(self, parent: obj_t = None):
        ...

    def set_src(self, state: int, src_left, src_mid, src_right) -> None:
        ...

    def set_state(self, state: int) -> None:
        ...

    def get_src_left(self, state: int) -> None:
        ...

    def get_src_middle(self, state: int) -> None:
        ...

    def get_src_right(self, state: int) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class STATE:
        RELEASED: int = ...
        PRESSED: int = ...
        DISABLED: int = ...
        CHECKED_RELEASED: int = ...
        CHECKED_PRESSED: int = ...
        CHECKED_DISABLED: int = ...


class keyboard(object):

    def __init__(self, parent: obj_t = None):
        ...

    def get_map_array(self) -> str:
        ...

    def get_selected_btn(self) -> int:
        ...

    def get_btn_text(self, btn_id: int) -> str:
        ...

    def set_textarea(self, ta: obj) -> None:
        ...

    def set_mode(self, mode: int) -> None:
        ...

    def set_popovers(self, antialias: bool) -> None:
        ...

    def set_map(
            self,
            mode: int,
            map: str,
            ctrl_map: List[btnmatrix_ctrl_t]
    ) -> None:
        ...

    def get_textarea(self) -> obj:
        ...

    def get_mode(self) -> int:
        ...

    def def_event_cb(self) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class MODE:
        TEXT_LOWER: int = ...
        TEXT_UPPER: int = ...
        SPECIAL: int = ...
        NUMBER: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...


class led(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_color(self, color: color16_t) -> None:
        ...

    def set_brightness(self, grow: int) -> None:
        ...

    def on(self) -> None:
        ...

    def off(self) -> None:
        ...

    def toggle(self) -> None:
        ...

    def get_brightness(self) -> int:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class line(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_points(self, points: List[point_t], point_num: int) -> None:
        ...

    def set_y_invert(self, antialias: bool) -> None:
        ...

    def get_y_invert(self) -> bool:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class list(object):

    def __init__(self, parent: obj_t = None):
        ...

    def add_text(self, txt: str) -> obj:
        ...

    def add_btn(self, icon, txt: str) -> obj:
        ...

    def get_btn_text(self, btn: obj) -> str:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class menu(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_page(self, ta: obj) -> None:
        ...

    def set_page_title(self, title: str) -> None:
        ...

    def set_page_title_static(self, title: str) -> None:
        ...

    def set_sidebar_page(self, ta: obj) -> None:
        ...

    def set_mode_header(self, mode_header: int) -> None:
        ...

    def set_mode_root_back_btn(self, mode_root_back_btn: int) -> None:
        ...

    def set_load_page_event(self, obj: obj, page: obj) -> None:
        ...

    def get_cur_main_page(self) -> obj:
        ...

    def get_cur_sidebar_page(self) -> obj:
        ...

    def get_main_header(self) -> obj:
        ...

    def get_main_header_back_btn(self) -> obj:
        ...

    def get_sidebar_header(self) -> obj:
        ...

    def get_sidebar_header_back_btn(self) -> obj:
        ...

    def back_btn_is_root(self, obj: obj) -> bool:
        ...

    def clear_history(self) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class HEADER:
        TOP_FIXED: int = ...
        TOP_UNFIXED: int = ...
        BOTTOM_FIXED: int = ...

    class ROOT_BACK_BTN:
        DISABLED: int = ...
        ENABLED: int = ...


class menu_page(object):

    def __init__(self, parent: obj_t = None):
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class menu_cont(object):

    def __init__(self, parent: obj_t = None):
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class menu_section(object):

    def __init__(self, parent: obj_t = None):
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class menu_separator(object):

    def __init__(self, parent: obj_t = None):
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class meter(object):

    def __init__(self, parent: obj_t = None):
        ...

    def add_scale(self) -> meter_scale_t:
        ...

    def set_scale_ticks(
            self,
            scale: meter_scale_t,
            cnt: int,
            width: int,
            len: int,
            color: color16_t
    ) -> None:
        ...

    def set_scale_major_ticks(
            self,
            scale: meter_scale_t,
            nth: int,
            width: int,
            len: int,
            color: color16_t,
            label_gap: int
    ) -> None:
        ...

    def set_scale_range(
            self,
            scale: meter_scale_t,
            min: int,
            max: int,
            angle_range: int,
            rotation: int
    ) -> None:
        ...

    def add_needle_line(
            self,
            scale: meter_scale_t,
            width: int,
            color: color16_t,
            r_mod: int
    ) -> meter_indicator_t:
        ...

    def add_needle_img(
            self,
            scale: meter_scale_t,
            src,
            pivot_x: int,
            pivot_y: int
    ) -> meter_indicator_t:
        ...

    def add_arc(
            self,
            scale: meter_scale_t,
            width: int,
            color: color16_t,
            r_mod: int
    ) -> meter_indicator_t:
        ...

    def add_scale_lines(
            self,
            scale: meter_scale_t,
            color_start: color16_t,
            color_end: color16_t,
            local: bool,
            width_mod: int
    ) -> meter_indicator_t:
        ...

    def set_indicator_value(self, indic: meter_indicator_t, value: int) -> None:
        ...

    def set_indicator_start_value(
            self,
            indic: meter_indicator_t,
            value: int
    ) -> None:
        ...

    def set_indicator_end_value(
            self,
            indic: meter_indicator_t,
            value: int
    ) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        ARC: int = ...
        NEEDLE_LINE: int = ...
        NEEDLE_IMG: int = ...
        TICK: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class INDICATOR_TYPE:
        NEEDLE_IMG: int = ...
        NEEDLE_LINE: int = ...
        SCALE_LINES: int = ...
        ARC: int = ...


class msgbox(object):

    def __init__(self, parent: obj_t = None):
        ...

    def get_title(self) -> obj:
        ...

    def get_close_btn(self) -> obj:
        ...

    def get_text(self) -> obj:
        ...

    def get_content(self) -> obj:
        ...

    def get_btns(self) -> obj:
        ...

    def get_active_btn(self) -> int:
        ...

    def get_active_btn_text(self) -> str:
        ...

    def close(self) -> None:
        ...

    def close_async(self) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class roller(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_options(self, options: str, mode: int) -> None:
        ...

    def set_selected(self, sel_opt: int, anim: int) -> None:
        ...

    def set_visible_row_count(self, grow: int) -> None:
        ...

    def get_selected(self) -> int:
        ...

    def get_selected_str(self, buf: str, buf_size: int) -> None:
        ...

    def get_options(self) -> str:
        ...

    def get_option_cnt(self) -> int:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class MODE:
        NORMAL: int = ...
        INFINITE: int = ...


class slider(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_value(self, value: int, anim: int) -> None:
        ...

    def set_left_value(self, value: int, anim: int) -> None:
        ...

    def set_range(self, min: int, max: int) -> None:
        ...

    def set_mode(self, mode: int) -> None:
        ...

    def get_value(self) -> int:
        ...

    def get_left_value(self) -> int:
        ...

    def get_min_value(self) -> int:
        ...

    def get_max_value(self) -> int:
        ...

    def get_mode(self) -> int:
        ...

    def is_dragged(self) -> bool:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        KNOB: int = ...
        KNOB_LEFT: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class MODE:
        NORMAL: int = ...
        SYMMETRICAL: int = ...
        RANGE: int = ...


class spangroup(object):

    def __init__(self, parent: obj_t = None):
        ...

    def new_span(self) -> span_t:
        ...

    def del_span(self, span: span_t) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def set_overflow(self, overflow: int) -> None:
        ...

    def set_indent(self, x: int) -> None:
        ...

    def set_mode(self, mode: int) -> None:
        ...

    def set_lines(self, lines: int) -> None:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_align(self) -> int:
        ...

    def get_overflow(self) -> int:
        ...

    def get_indent(self) -> int:
        ...

    def get_mode(self) -> int:
        ...

    def get_lines(self) -> int:
        ...

    def get_max_line_h(self) -> int:
        ...

    def get_expand_width(self, max_width: int) -> int:
        ...

    def get_expand_height(self, width: int) -> int:
        ...

    def refr_mode(self) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class textarea(object):

    def __init__(self, parent: obj_t = None):
        ...

    def add_char(self, duration: int) -> None:
        ...

    def add_text(self, text: str) -> None:
        ...

    def del_char(self) -> None:
        ...

    def del_char_forward(self) -> None:
        ...

    def set_text(self, text: str) -> None:
        ...

    def set_placeholder_text(self, text: str) -> None:
        ...

    def set_cursor_pos(self, lines: int) -> None:
        ...

    def set_cursor_click_pos(self, antialias: bool) -> None:
        ...

    def set_password_mode(self, antialias: bool) -> None:
        ...

    def set_password_bullet(self, text: str) -> None:
        ...

    def set_one_line(self, antialias: bool) -> None:
        ...

    def set_accepted_chars(self, text: str) -> None:
        ...

    def set_max_length(self, duration: int) -> None:
        ...

    def set_insert_replace(self, text: str) -> None:
        ...

    def set_text_selection(self, antialias: bool) -> None:
        ...

    def set_password_show_time(self, zoom: int) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def get_text(self) -> str:
        ...

    def get_placeholder_text(self) -> str:
        ...

    def get_label(self) -> obj:
        ...

    def get_cursor_pos(self) -> int:
        ...

    def get_cursor_click_pos(self) -> bool:
        ...

    def get_password_mode(self) -> bool:
        ...

    def get_password_bullet(self) -> str:
        ...

    def get_one_line(self) -> bool:
        ...

    def get_accepted_chars(self) -> str:
        ...

    def get_max_length(self) -> int:
        ...

    def text_is_selected(self) -> bool:
        ...

    def get_text_selection(self) -> bool:
        ...

    def get_password_show_time(self) -> int:
        ...

    def get_current_char(self) -> int:
        ...

    def clear_selection(self) -> None:
        ...

    def cursor_right(self) -> None:
        ...

    def cursor_left(self) -> None:
        ...

    def cursor_down(self) -> None:
        ...

    def cursor_up(self) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class spinbox(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_value(self, lines: int) -> None:
        ...

    def set_rollover(self, antialias: bool) -> None:
        ...

    def set_digit_format(self, hdiv: int, vdiv: int) -> None:
        ...

    def set_step(self, duration: int) -> None:
        ...

    def set_range(self, min: int, max: int) -> None:
        ...

    def set_cursor_pos(self, grow: int) -> None:
        ...

    def set_digit_step_direction(self, dir: int) -> None:
        ...

    def get_rollover(self) -> bool:
        ...

    def get_value(self) -> int:
        ...

    def get_step(self) -> int:
        ...

    def step_next(self) -> None:
        ...

    def step_prev(self) -> None:
        ...

    def increment(self) -> None:
        ...

    def decrement(self) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class spinner(object):

    def __init__(self, parent: obj_t = None):
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class switch(object):

    def __init__(self, parent: obj_t = None):
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class table(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_cell_value(self, row: int, col: int, txt: str) -> None:
        ...

    def set_row_cnt(self, zoom: int) -> None:
        ...

    def set_col_cnt(self, zoom: int) -> None:
        ...

    def set_col_width(self, col_id: int, w: int) -> None:
        ...

    def add_cell_ctrl(self, row: int, col: int, ctrl: int) -> None:
        ...

    def clear_cell_ctrl(self, row: int, col: int, ctrl: int) -> None:
        ...

    def get_cell_value(self, row: int, col: int) -> str:
        ...

    def get_row_cnt(self) -> int:
        ...

    def get_col_cnt(self) -> int:
        ...

    def get_col_width(self, col: int) -> int:
        ...

    def has_cell_ctrl(self, row: int, col: int, ctrl: int) -> bool:
        ...

    def get_selected_cell(self, row, col) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        CELL: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CELL_CTRL:
        MERGE_RIGHT: int = ...
        TEXT_CROP: int = ...
        CUSTOM_1: int = ...
        CUSTOM_2: int = ...
        CUSTOM_3: int = ...
        CUSTOM_4: int = ...


class tabview(object):

    def __init__(self, parent: obj_t = None):
        ...

    def add_tab(self, txt: str) -> obj:
        ...

    def rename_tab(self, pos: int, txt: str) -> None:
        ...

    def get_content(self) -> obj:
        ...

    def get_tab_btns(self) -> obj:
        ...

    def set_act(self, id: int, anim_en: int) -> None:
        ...

    def get_tab_act(self) -> int:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class tileview(object):

    def __init__(self, parent: obj_t = None):
        ...

    def add_tile(self, col_id: int, row_id: int, dir: int) -> obj:
        ...

    def get_tile_act(self) -> obj:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class win(object):

    def __init__(self, parent: obj_t = None):
        ...

    def add_title(self, txt: str) -> obj:
        ...

    def add_btn(self, icon, btn_w: int) -> obj:
        ...

    def get_header(self) -> obj:
        ...

    def get_content(self) -> obj:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class ime_pinyin(object):

    def __init__(self, parent: obj_t = None):
        ...

    def pinyin_set_keyboard(self, ta: obj) -> None:
        ...

    def pinyin_set_dict(self, dict: pinyin_dict_t) -> None:
        ...

    def pinyin_set_mode(self, mode: int) -> None:
        ...

    def pinyin_get_kb(self) -> obj:
        ...

    def pinyin_get_cand_panel(self) -> obj:
        ...

    def pinyin_get_dict(self) -> pinyin_dict_t:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class PINYIN_MODE:
        K26: int = ...
        K9: int = ...
        K9_NUMBER: int = ...


class file_explorer(object):

    def __init__(self, parent: obj_t = None):
        ...

    def explorer_set_quick_access_path(self, dir: int, path: str) -> None:
        ...

    def explorer_set_sort(self, sort: int) -> None:
        ...

    def explorer_get_selected_file_name(self) -> str:
        ...

    def explorer_get_current_path(self) -> str:
        ...

    def explorer_get_header(self) -> obj:
        ...

    def explorer_get_quick_access_area(self) -> obj:
        ...

    def explorer_get_path_label(self) -> obj:
        ...

    def explorer_get_places_list(self) -> obj:
        ...

    def explorer_get_device_list(self) -> obj:
        ...

    def explorer_get_file_table(self) -> obj:
        ...

    def explorer_get_sort(self) -> int:
        ...

    def explorer_open_dir(self, text: str) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class gif(object):

    def __init__(self, parent: obj_t = None):
        ...

    def set_src(self, src) -> None:
        ...

    def restart(self) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def delete(self) -> None:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class qrcode(object):

    def __init__(self, parent: obj_t = None):
        ...

    def update(self, data, data_len: int) -> int:
        ...

    def delete(self) -> None:
        ...

    def center(self) -> None:
        ...

    def remove_style_all(self) -> None:
        ...

    def get_style_width(self, part: int) -> int:
        ...

    def get_style_min_width(self, part: int) -> int:
        ...

    def get_style_max_width(self, part: int) -> int:
        ...

    def get_style_height(self, part: int) -> int:
        ...

    def get_style_min_height(self, part: int) -> int:
        ...

    def get_style_max_height(self, part: int) -> int:
        ...

    def get_style_x(self, part: int) -> int:
        ...

    def get_style_y(self, part: int) -> int:
        ...

    def get_style_align(self, part: int) -> int:
        ...

    def get_style_transform_width(self, part: int) -> int:
        ...

    def get_style_transform_height(self, part: int) -> int:
        ...

    def get_style_translate_x(self, part: int) -> int:
        ...

    def get_style_translate_y(self, part: int) -> int:
        ...

    def get_style_transform_zoom(self, part: int) -> int:
        ...

    def get_style_transform_angle(self, part: int) -> int:
        ...

    def get_style_transform_pivot_x(self, part: int) -> int:
        ...

    def get_style_transform_pivot_y(self, part: int) -> int:
        ...

    def get_style_pad_top(self, part: int) -> int:
        ...

    def get_style_pad_bottom(self, part: int) -> int:
        ...

    def get_style_pad_left(self, part: int) -> int:
        ...

    def get_style_pad_right(self, part: int) -> int:
        ...

    def get_style_pad_row(self, part: int) -> int:
        ...

    def get_style_pad_column(self, part: int) -> int:
        ...

    def get_style_bg_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_opa(self, part: int) -> int:
        ...

    def get_style_bg_grad_color(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_grad_dir(self, part: int) -> int:
        ...

    def get_style_bg_main_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad_stop(self, part: int) -> int:
        ...

    def get_style_bg_grad(self, part: int) -> grad_dsc_t:
        ...

    def get_style_bg_dither_mode(self, part: int) -> int:
        ...

    def get_style_bg_img_src(self, part: int) -> None:
        ...

    def get_style_bg_img_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_bg_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_bg_img_tiled(self, part: int) -> bool:
        ...

    def get_style_border_color(self, part: int) -> color16_t:
        ...

    def get_style_border_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_border_opa(self, part: int) -> int:
        ...

    def get_style_border_width(self, part: int) -> int:
        ...

    def get_style_border_side(self, part: int) -> int:
        ...

    def get_style_border_post(self, part: int) -> bool:
        ...

    def get_style_outline_width(self, part: int) -> int:
        ...

    def get_style_outline_color(self, part: int) -> color16_t:
        ...

    def get_style_outline_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_outline_opa(self, part: int) -> int:
        ...

    def get_style_outline_pad(self, part: int) -> int:
        ...

    def get_style_shadow_width(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_x(self, part: int) -> int:
        ...

    def get_style_shadow_ofs_y(self, part: int) -> int:
        ...

    def get_style_shadow_spread(self, part: int) -> int:
        ...

    def get_style_shadow_color(self, part: int) -> color16_t:
        ...

    def get_style_shadow_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_shadow_opa(self, part: int) -> int:
        ...

    def get_style_img_opa(self, part: int) -> int:
        ...

    def get_style_img_recolor(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_filtered(self, part: int) -> color16_t:
        ...

    def get_style_img_recolor_opa(self, part: int) -> int:
        ...

    def get_style_line_width(self, part: int) -> int:
        ...

    def get_style_line_dash_width(self, part: int) -> int:
        ...

    def get_style_line_dash_gap(self, part: int) -> int:
        ...

    def get_style_line_rounded(self, part: int) -> bool:
        ...

    def get_style_line_color(self, part: int) -> color16_t:
        ...

    def get_style_line_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_line_opa(self, part: int) -> int:
        ...

    def get_style_arc_width(self, part: int) -> int:
        ...

    def get_style_arc_rounded(self, part: int) -> bool:
        ...

    def get_style_arc_color(self, part: int) -> color16_t:
        ...

    def get_style_arc_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_arc_opa(self, part: int) -> int:
        ...

    def get_style_arc_img_src(self, part: int) -> None:
        ...

    def get_style_text_color(self, part: int) -> color16_t:
        ...

    def get_style_text_color_filtered(self, part: int) -> color16_t:
        ...

    def get_style_text_opa(self, part: int) -> int:
        ...

    def get_style_text_font(self, part: int) -> font_t:
        ...

    def get_style_text_letter_space(self, part: int) -> int:
        ...

    def get_style_text_line_space(self, part: int) -> int:
        ...

    def get_style_text_decor(self, part: int) -> int:
        ...

    def get_style_text_align(self, part: int) -> int:
        ...

    def get_style_radius(self, part: int) -> int:
        ...

    def get_style_clip_corner(self, part: int) -> bool:
        ...

    def get_style_opa(self, part: int) -> int:
        ...

    def get_style_color_filter_dsc(self, part: int) -> color_filter_dsc_t:
        ...

    def get_style_color_filter_opa(self, part: int) -> int:
        ...

    def get_style_anim(self, part: int) -> anim_t:
        ...

    def get_style_anim_time(self, part: int) -> int:
        ...

    def get_style_anim_speed(self, part: int) -> int:
        ...

    def get_style_transition(self, part: int) -> style_transition_dsc_t:
        ...

    def get_style_blend_mode(self, part: int) -> int:
        ...

    def get_style_layout(self, part: int) -> int:
        ...

    def get_style_base_dir(self, part: int) -> int:
        ...

    def set_style_pad_all(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_hor(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_ver(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_size(self, width: int, height: int, selector: int) -> None:
        ...

    def set_user_data(self, obj: obj) -> None:
        ...

    def get_user_data(self) -> None:
        ...

    def dpx(self, n: int) -> int:
        ...

    def get_style_flex_flow(self, part: int) -> int:
        ...

    def get_style_flex_main_place(self, part: int) -> int:
        ...

    def get_style_flex_cross_place(self, part: int) -> int:
        ...

    def get_style_flex_track_place(self, part: int) -> int:
        ...

    def get_style_flex_grow(self, part: int) -> int:
        ...

    def get_style_grid_row_align(self, part: int) -> int:
        ...

    def get_style_grid_column_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_column_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_pos(self, part: int) -> int:
        ...

    def get_style_grid_cell_row_span(self, part: int) -> int:
        ...

    def get_style_grid_cell_x_align(self, part: int) -> int:
        ...

    def get_style_grid_cell_y_align(self, part: int) -> int:
        ...

    def move_foreground(self) -> None:
        ...

    def move_background(self) -> None:
        ...

    def get_child_id(self) -> int:
        ...

    def set_pos(self, x: int, y: int) -> None:
        ...

    def set_x(self, x: int) -> None:
        ...

    def set_y(self, x: int) -> None:
        ...

    def set_size(self, x: int, y: int) -> None:
        ...

    def refr_size(self) -> bool:
        ...

    def set_width(self, x: int) -> None:
        ...

    def set_height(self, x: int) -> None:
        ...

    def set_content_width(self, x: int) -> None:
        ...

    def set_content_height(self, x: int) -> None:
        ...

    def set_layout(self, layout: int) -> None:
        ...

    def is_layout_positioned(self) -> bool:
        ...

    def mark_layout_as_dirty(self) -> None:
        ...

    def update_layout(self) -> None:
        ...

    def set_align(self, align: int) -> None:
        ...

    def align(self, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def align_to(self, base: obj, align: int, x_ofs: int, y_ofs: int) -> None:
        ...

    def get_coords(self, coords: area_t) -> None:
        ...

    def get_x(self) -> int:
        ...

    def get_x2(self) -> int:
        ...

    def get_y(self) -> int:
        ...

    def get_y2(self) -> int:
        ...

    def get_x_aligned(self) -> int:
        ...

    def get_y_aligned(self) -> int:
        ...

    def get_width(self) -> int:
        ...

    def get_height(self) -> int:
        ...

    def get_content_width(self) -> int:
        ...

    def get_content_height(self) -> int:
        ...

    def get_content_coords(self, coords: area_t) -> None:
        ...

    def get_self_width(self) -> int:
        ...

    def get_self_height(self) -> int:
        ...

    def refresh_self_size(self) -> bool:
        ...

    def refr_pos(self) -> None:
        ...

    def move_to(self, x: int, y: int) -> None:
        ...

    def move_children_by(
            self,
            x_diff: int,
            y_diff: int,
            ignore_floating: bool
    ) -> None:
        ...

    def transform_point(self, p: point_t, recursive: bool, inv: bool) -> None:
        ...

    def get_transformed_area(
            self,
            area: area_t,
            recursive: bool,
            inv: bool
    ) -> None:
        ...

    def invalidate_area(self, area: area_t) -> None:
        ...

    def invalidate(self) -> None:
        ...

    def area_is_visible(self, area: area_t) -> bool:
        ...

    def is_visible(self) -> bool:
        ...

    def set_ext_click_area(self, x: int) -> None:
        ...

    def get_click_area(self, coords: area_t) -> None:
        ...

    def hit_test(self, point: point_t) -> bool:
        ...

    def clean(self) -> None:
        ...

    def del_delayed(self, layout: int) -> None:
        ...

    def del_anim_ready_cb(self) -> None:
        ...

    def del_async(self) -> None:
        ...

    def set_parent(self, parent: obj) -> None:
        ...

    def swap(self, parent: obj) -> None:
        ...

    def move_to_index(self, index: int) -> None:
        ...

    def get_screen(self) -> obj:
        ...

    def get_disp(self) -> disp_t:
        ...

    def get_parent(self) -> obj:
        ...

    def get_child(self, id: int) -> obj:
        ...

    def get_child_cnt(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def tree_walk(self, cb: Callable, start_obj: obj) -> None:
        ...

    def set_scrollbar_mode(self, mode: int) -> None:
        ...

    def set_scroll_dir(self, dir: int) -> None:
        ...

    def set_scroll_snap_x(self, align: int) -> None:
        ...

    def set_scroll_snap_y(self, align: int) -> None:
        ...

    def get_scrollbar_mode(self) -> int:
        ...

    def get_scroll_dir(self) -> int:
        ...

    def get_scroll_snap_x(self) -> int:
        ...

    def get_scroll_snap_y(self) -> int:
        ...

    def get_scroll_x(self) -> int:
        ...

    def get_scroll_y(self) -> int:
        ...

    def get_scroll_top(self) -> int:
        ...

    def get_scroll_bottom(self) -> int:
        ...

    def get_scroll_left(self) -> int:
        ...

    def get_scroll_right(self) -> int:
        ...

    def get_scroll_end(self, end: point_t) -> None:
        ...

    def scroll_by(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_by_bounded(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to(self, x: int, y: int, anim_en: int) -> None:
        ...

    def scroll_to_x(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_y(self, x: int, anim_en: int) -> None:
        ...

    def scroll_to_view(self, anim_en: int) -> None:
        ...

    def scroll_to_view_recursive(self, anim_en: int) -> None:
        ...

    def is_scrolling(self) -> bool:
        ...

    def update_snap(self, anim_en: int) -> None:
        ...

    def get_scrollbar_area(self, hor: area_t, ver: area_t) -> None:
        ...

    def scrollbar_invalidate(self) -> None:
        ...

    def readjust_scroll(self, anim_en: int) -> None:
        ...

    def add_style(self, style: style_t, selector: int) -> None:
        ...

    def remove_style(self, style: style_t, selector: int) -> None:
        ...

    def report_style_change(self) -> None:
        ...

    def refresh_style(self, part: int, prop: int) -> None:
        ...

    def enable_style_refresh(self) -> None:
        ...

    def get_style_prop(self, part: int, prop: int) -> style_value_t:
        ...

    def set_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> None:
        ...

    def set_local_style_prop_meta(
            self,
            prop: int,
            meta: int,
            selector: int
    ) -> None:
        ...

    def get_local_style_prop(
            self,
            prop: int,
            value: style_value_t,
            selector: int
    ) -> int:
        ...

    def remove_local_style_prop(self, prop: int, selector: int) -> bool:
        ...

    def fade_in(self, time: int, delay: int) -> None:
        ...

    def fade_out(self, time: int, delay: int) -> None:
        ...

    def style_get_selector_state(self) -> int:
        ...

    def style_get_selector_part(self) -> int:
        ...

    def set_style_width(self, value: int, selector: int) -> None:
        ...

    def set_style_min_width(self, value: int, selector: int) -> None:
        ...

    def set_style_max_width(self, value: int, selector: int) -> None:
        ...

    def set_style_height(self, value: int, selector: int) -> None:
        ...

    def set_style_min_height(self, value: int, selector: int) -> None:
        ...

    def set_style_max_height(self, value: int, selector: int) -> None:
        ...

    def set_style_x(self, value: int, selector: int) -> None:
        ...

    def set_style_y(self, value: int, selector: int) -> None:
        ...

    def set_style_align(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_width(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_height(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_x(self, value: int, selector: int) -> None:
        ...

    def set_style_translate_y(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_zoom(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_angle(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_x(self, value: int, selector: int) -> None:
        ...

    def set_style_transform_pivot_y(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_top(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_bottom(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_left(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_right(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_row(self, value: int, selector: int) -> None:
        ...

    def set_style_pad_column(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_grad_dir(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_main_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad_stop(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_grad(self, value: grad_dsc_t, selector: int) -> None:
        ...

    def set_style_bg_dither_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_src(self, value, selector: int) -> None:
        ...

    def set_style_bg_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_bg_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_bg_img_tiled(self, value: bool, selector: int) -> None:
        ...

    def set_style_border_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_border_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_border_width(self, value: int, selector: int) -> None:
        ...

    def set_style_border_side(self, value: int, selector: int) -> None:
        ...

    def set_style_border_post(self, value: bool, selector: int) -> None:
        ...

    def set_style_outline_width(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_outline_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_outline_pad(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_width(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_x(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_ofs_y(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_spread(self, value: int, selector: int) -> None:
        ...

    def set_style_shadow_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_shadow_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_img_recolor(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_img_recolor_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_line_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_width(self, value: int, selector: int) -> None:
        ...

    def set_style_line_dash_gap(self, value: int, selector: int) -> None:
        ...

    def set_style_line_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_line_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_line_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_width(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_rounded(self, value: bool, selector: int) -> None:
        ...

    def set_style_arc_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_arc_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_arc_img_src(self, value, selector: int) -> None:
        ...

    def set_style_text_color(self, value: color16_t, selector: int) -> None:
        ...

    def set_style_text_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_text_font(self, value: font_t, selector: int) -> None:
        ...

    def set_style_text_letter_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_line_space(self, value: int, selector: int) -> None:
        ...

    def set_style_text_decor(self, value: int, selector: int) -> None:
        ...

    def set_style_text_align(self, value: int, selector: int) -> None:
        ...

    def set_style_radius(self, value: int, selector: int) -> None:
        ...

    def set_style_clip_corner(self, value: bool, selector: int) -> None:
        ...

    def set_style_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_color_filter_dsc(
            self,
            value: color_filter_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_color_filter_opa(self, value: int, selector: int) -> None:
        ...

    def set_style_anim(self, value: anim_t, selector: int) -> None:
        ...

    def set_style_anim_time(self, value: int, selector: int) -> None:
        ...

    def set_style_anim_speed(self, value: int, selector: int) -> None:
        ...

    def set_style_transition(
            self,
            value: style_transition_dsc_t,
            selector: int
    ) -> None:
        ...

    def set_style_blend_mode(self, value: int, selector: int) -> None:
        ...

    def set_style_layout(self, value: int, selector: int) -> None:
        ...

    def set_style_base_dir(self, value: int, selector: int) -> None:
        ...

    def calculate_style_text_align(self, part: int, txt: str) -> int:
        ...

    def init_draw_rect_dsc(self, part: int, draw_dsc: draw_rect_dsc_t) -> None:
        ...

    def init_draw_label_dsc(
            self,
            part: int,
            draw_dsc: draw_label_dsc_t
    ) -> None:
        ...

    def init_draw_img_dsc(self, part: int, draw_dsc: draw_img_dsc_t) -> None:
        ...

    def init_draw_line_dsc(self, part: int, draw_dsc: draw_line_dsc_t) -> None:
        ...

    def init_draw_arc_dsc(self, part: int, draw_dsc: draw_arc_dsc_t) -> None:
        ...

    def calculate_ext_draw_size(self, part: int) -> int:
        ...

    def draw_dsc_init(self, draw_ctx: draw_ctx_t) -> None:
        ...

    def draw_part_check_type(self, class_p: obj_class_t, type: int) -> bool:
        ...

    def refresh_ext_draw_size(self) -> None:
        ...

    def class_create_obj(self, parent: obj) -> obj:
        ...

    def class_init_obj(self) -> None:
        ...

    def is_editable(self) -> bool:
        ...

    def is_group_def(self) -> bool:
        ...

    def event_base(self, e: event_t) -> int:
        ...

    def add_event_cb(self, event_cb: Callable, filter: int, obj: obj) -> None:
        ...

    def remove_event_cb(self, event_cb: Callable) -> bool:
        ...

    def remove_event_cb_with_user_data(
            self,
            event_cb: Callable,
            event_user_data
    ) -> bool:
        ...

    def remove_event_dsc(self, event_dsc) -> bool:
        ...

    def get_event_user_data(self, event_cb: Callable) -> None:
        ...

    def add_flag(self, f: int) -> None:
        ...

    def clear_flag(self, f: int) -> None:
        ...

    def add_state(self, state: int) -> None:
        ...

    def clear_state(self, state: int) -> None:
        ...

    def has_flag(self, f: int) -> bool:
        ...

    def has_flag_any(self, f: int) -> bool:
        ...

    def get_state(self) -> int:
        ...

    def has_state(self, state: int) -> bool:
        ...

    def get_group(self) -> group_t:
        ...

    def allocate_spec_attr(self) -> None:
        ...

    def check_type(self, class_p: obj_class_t) -> bool:
        ...

    def has_class(self, class_p: obj_class_t) -> bool:
        ...

    def get_class(self) -> obj_class_t:
        ...

    def is_valid(self) -> bool:
        ...

    def redraw(self, obj: obj) -> None:
        ...

    def set_tile(self, tile_obj: obj, anim_en: int) -> None:
        ...

    def set_tile_id(self, col_id: int, row_id: int, anim_en: int) -> None:
        ...

    def set_flex_flow(self, flow: int) -> None:
        ...

    def set_flex_align(
            self,
            main_place: int,
            cross_place: int,
            track_cross_place: int
    ) -> None:
        ...

    def set_flex_grow(self, grow: int) -> None:
        ...

    def set_style_flex_flow(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_main_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_cross_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_track_place(self, value: int, selector: int) -> None:
        ...

    def set_style_flex_grow(self, value: int, selector: int) -> None:
        ...

    def set_grid_dsc_array(
            self,
            col_dsc: List[coord_t],
            row_dsc: List[coord_t]
    ) -> None:
        ...

    def set_grid_align(self, column_align: int, row_align: int) -> None:
        ...

    def set_grid_cell(
            self,
            column_align: int,
            col_pos: int,
            col_span: int,
            row_align: int,
            row_pos: int,
            row_span: int
    ) -> None:
        ...

    def set_style_grid_row_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_column_dsc_array(
            self,
            value: List[coord_t],
            selector: int
    ) -> None:
        ...

    def set_style_grid_row_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_column_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_column_span(
            self,
            value: int,
            selector: int
    ) -> None:
        ...

    def set_style_grid_cell_row_pos(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_row_span(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_x_align(self, value: int, selector: int) -> None:
        ...

    def set_style_grid_cell_y_align(self, value: int, selector: int) -> None:
        ...

    class FLAG:
        HIDDEN: int = ...
        CLICKABLE: int = ...
        CLICK_FOCUSABLE: int = ...
        CHECKABLE: int = ...
        SCROLLABLE: int = ...
        SCROLL_ELASTIC: int = ...
        SCROLL_MOMENTUM: int = ...
        SCROLL_ONE: int = ...
        SCROLL_CHAIN_HOR: int = ...
        SCROLL_CHAIN_VER: int = ...
        SCROLL_CHAIN: int = ...
        SCROLL_ON_FOCUS: int = ...
        SCROLL_WITH_ARROW: int = ...
        SNAPPABLE: int = ...
        PRESS_LOCK: int = ...
        EVENT_BUBBLE: int = ...
        GESTURE_BUBBLE: int = ...
        ADV_HITTEST: int = ...
        IGNORE_LAYOUT: int = ...
        FLOATING: int = ...
        OVERFLOW_VISIBLE: int = ...
        LAYOUT_1: int = ...
        LAYOUT_2: int = ...
        WIDGET_1: int = ...
        WIDGET_2: int = ...
        USER_1: int = ...
        USER_2: int = ...
        USER_3: int = ...
        USER_4: int = ...

    class DRAW_PART:
        RECTANGLE: int = ...
        BORDER_POST: int = ...
        SCROLLBAR: int = ...

    class TREE_WALK:
        NEXT: int = ...
        SKIP_CHILDREN: int = ...
        END: int = ...

    class CLASS_EDITABLE:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...

    class CLASS_GROUP_DEF:
        INHERIT: int = ...
        TRUE: int = ...
        FALSE: int = ...


class indev_type_t(int):
    ...


class indev_state_t(int):
    ...


# Data structure passed to an input driver to fill
class indev_data_t:
    point: point_t = ...  # For LV_INDEV_TYPE_POINTER the currently pressed point
    key: int = ...  # For LV_INDEV_TYPE_KEYPAD the currently pressed key
    btn_id: int = ...  # For LV_INDEV_TYPE_BUTTON the currently pressed button
    enc_diff: int = ...  # For LV_INDEV_TYPE_ENCODER number of steps since the previous read

    state: indev_state_t = ...  # LV_INDEV_STATE_REL or LV_INDEV_STATE_PR
    continue_reading: bool = ...  # If set to true, the read callback is invoked again


# Initialized by the user and registered by 'lv_indev_add()'
class _indev_drv_t:
    # Input device type
    type: indev_type_t = ...

    # Function pointer to read input device data.
    def read_cb(self, data: indev_data_t) -> None:
        ...

    # Called when an action happened on the input device. The second parameter is the event from `lv_event_t`
    def feedback_cb(self, _: int) -> None:
        ...

    user_data = ...

    # Pointer to the assigned display
    disp: _disp_t = ...

    # Timer to periodically read the input device
    read_timer: timer_t = ...

    # Number of pixels to slide before actually drag the object
    scroll_limit: int = ...

    # Drag throw slow-down in [%]. Greater value means faster slow-down
    scroll_throw: int = ...

    # At least this difference should be between two points to evaluate as gesture
    gesture_min_velocity: int = ...

    # At least this difference should be to send a gesture
    gesture_limit: int = ...

    # Long press time in milliseconds
    long_press_time: int = ...

    # Repeated trigger period in long press [ms]
    long_press_repeat_time: int = ...


indev_drv_t = _indev_drv_t


# Run time data of input devices Internally used by the library, you should not need to touch it.
class _indev_proc_t:
    state: indev_state_t = ...  # Current state of the input device.
    # Flags
    long_pr_sent: int = ...
    reset_query: int = ...
    disabled: int = ...
    wait_until_release: int = ...

    class types:
        class pointer:
            # Pointer and button data
            act_point: point_t = ...  # Current point of input device.
            last_point: point_t = ...  # Last point of input device.
            last_raw_point: point_t = ...  # Last point read from read_cb.
            vect: point_t = ...  # Difference between `act_point` and `last_point`.
            scroll_sum: point_t = ...  # Count the dragged pixels to check LV_INDEV_DEF_SCROLL_LIMIT
            scroll_throw_vect: point_t = ...
            scroll_throw_vect_ori: point_t = ...
            act_obj: _obj_t = ...  # The object being pressed
            last_obj: _obj_t = ...  # The last object which was pressed
            scroll_obj: _obj_t = ...  # The object being scrolled
            last_pressed: _obj_t = ...  # The lastly pressed object
            scroll_area: area_t = ...

            gesture_sum: point_t = ...  # Count the gesture pixels to check LV_INDEV_DEF_GESTURE_LIMIT

            # Flags
            scroll_dir: dir_t = ...
            gesture_dir: dir_t = ...
            gesture_sent: int = ...

        class keypad:
            # Keypad data
            last_state: indev_state_t = ...
            last_key: int = ...

    pr_timestamp: int = ...  # Pressed time stamp*/
    longpr_rep_timestamp: int = ...  # Long press repeat time stamp*/


indev_proc_t = _indev_proc_t


# The main input device descriptor with driver, runtime data ('proc') and some additional information
class _indev_t:
    driver: _indev_drv_t = ...
    proc: _indev_proc_t = ...
    cursor: _obj_t = ...  # Cursor for LV_INPUT_TYPE_POINTER
    group: _group_t = ...  # Keypad destination group
    btn_points: point_t = ...  # Array points assigned to the button ()screen will be pressed here by the buttons


indev_t = _indev_t


def timer_handler_run_in_period(ms: int) -> int:
    ...


def trigo_cos(angle: int) -> int:
    ...


def memzero(dst, len: int) -> None:
    ...


def pct(x: int) -> int:
    ...


def font_default() -> font_t:
    ...


def color_mix_premult(premult_c1, c2: color16_t, mix: int) -> color16_t:
    ...


def color_make(r: int, g: int, b: int) -> color16_t:
    ...


def color_hex(c: int) -> color16_t:
    ...


def color_hex3(c: int) -> color16_t:
    ...


def color_chroma_key() -> color16_t:
    ...


def color_white() -> color16_t:
    ...


def color_black() -> color16_t:
    ...


def style_prop_has_flag(prop: int, flag: int) -> bool:
    ...


def scr_act() -> obj:
    ...


def layer_top() -> obj:
    ...


def layer_sys() -> obj:
    ...


def scr_load(obj: obj) -> None:
    ...


def dpx(x: int) -> int:
    ...


def grid_fr(x: int) -> int:
    ...


def task_handler() -> int:
    ...


def version_major() -> int:
    ...


def version_minor() -> int:
    ...


def version_patch() -> int:
    ...


def version_info() -> str:
    ...


def log_register_print_cb(print_cb: Callable) -> None:
    ...


def tick_inc(tick_period: int) -> None:
    ...


def tick_get() -> int:
    ...


def tick_elaps(ms: int) -> int:
    ...


def timer_handler() -> int:
    ...


def timer_create_basic() -> timer_t:
    ...


def timer_create(user_data, period: int, timer_xcb: Callable) -> timer_t:
    ...


def timer_enable(en: bool) -> None:
    ...


def timer_get_idle() -> int:
    ...


def trigo_sin(angle: int) -> int:
    ...


def bezier3(t: int, u0: int, u1: int, u2: int, u3: int) -> int:
    ...


def atan2(x: int, y: int) -> int:
    ...


def sqrt(x: int, q: sqrt_res_t, mask: int) -> None:
    ...


def pow(base: int, exp: int) -> int:
    ...


def map(x: int, min_in: int, max_in: int, min_out: int, max_out: int) -> int:
    ...


def rand(min: int, max: int) -> int:
    ...


def malloc(size: int) -> None:
    ...


def free(_) -> None:
    ...


def realloc(data_p, new_size: int) -> None:
    ...


def memcpy(dst, src, len: int) -> None:
    ...


def memset(dst, v: int, len: int) -> None:
    ...


def strlen(str: str) -> int:
    ...


def strncpy(dst: str, dest_size: int, src: str) -> int:
    ...


def mem_test() -> int:
    ...


def async_call(user_data, async_xcb: Callable) -> int:
    ...


def async_call_cancel(user_data, async_xcb: Callable) -> int:
    ...


def anim_del(var, exec_cb: Callable) -> bool:
    ...


def anim_del_all() -> None:
    ...


def anim_get(var, exec_cb: Callable) -> anim_t:
    ...


def anim_get_timer() -> timer_t:
    ...


def anim_count_running() -> int:
    ...


def anim_speed_to_time(speed: int, start: int, end: int) -> int:
    ...


def anim_refr_now() -> None:
    ...


def anim_timeline_create() -> None:
    ...


def anim_timeline_del(at) -> None:
    ...


def anim_timeline_add(at, start_time: int, a: anim_t) -> None:
    ...


def anim_timeline_start(at) -> int:
    ...


def anim_timeline_stop(at) -> None:
    ...


def anim_timeline_set_reverse(at, reverse: bool) -> None:
    ...


def anim_timeline_set_progress(at, progress: int) -> None:
    ...


def anim_timeline_get_playtime(at) -> int:
    ...


def anim_timeline_get_reverse(at) -> bool:
    ...


def color_hsv_to_rgb(h: int, s: int, v: int) -> color16_t:
    ...


def color_rgb_to_hsv(r8: int, g8: int, b8: int) -> color_hsv_t:
    ...


def palette_main(p: int) -> color16_t:
    ...


def palette_lighten(p: int, lvl: int) -> color16_t:
    ...


def palette_darken(p: int, lvl: int) -> color16_t:
    ...


def txt_get_size(
        size_res: point_t,
        text: str,
        font: font_t,
        letter_space: int,
        line_space: int,
        max_width: int,
        flag: int
) -> None:
    ...


def txt_get_width(
        txt: str,
        length: int,
        font: font_t,
        letter_space: int,
        flag: int
) -> int:
    ...


def bidi_calculate_align(align, base_dir, txt: str) -> None:
    ...


def style_register_prop(flag: int) -> int:
    ...


def style_get_num_custom_props() -> int:
    ...


def style_prop_get_default(prop: int) -> style_value_t:
    ...


def fs_get_drv(letter: int) -> fs_drv_t:
    ...


def fs_is_ready(letter: int) -> bool:
    ...


def fs_get_letters(buf: str) -> str:
    ...


def fs_get_ext(fn: str) -> str:
    ...


def fs_up(buf: str) -> str:
    ...


def fs_get_last(fn: str) -> str:
    ...


def layout_register(user_data, cb: Callable) -> int:
    ...


def clamp_width(
        width: int,
        min_width: int,
        max_width: int,
        ref_width: int
) -> int:
    ...


def clamp_height(
        width: int,
        min_width: int,
        max_width: int,
        ref_width: int
) -> int:
    ...


def gradient_set_cache_size(max_bytes: int) -> None:
    ...


def gradient_free_cache() -> None:
    ...


def draw_arc_get_area(
        x: int,
        y: int,
        radius: int,
        start_angle: int,
        end_angle: int,
        w: int,
        rounded: bool,
        area: area_t
) -> None:
    ...


def draw_mask_add(param, custom_id) -> int:
    ...


def draw_mask_apply(mask_buf, abs_x: int, abs_y: int, len: int) -> int:
    ...


def draw_mask_apply_ids(
        mask_buf,
        abs_x: int,
        abs_y: int,
        len: int,
        ids,
        ids_count: int
) -> int:
    ...


def draw_mask_remove_id(id: int) -> None:
    ...


def draw_mask_remove_custom(custom_id) -> None:
    ...


def draw_mask_free_param(_) -> None:
    ...


def draw_mask_get_cnt() -> int:
    ...


def draw_mask_is_any(a: area_t) -> bool:
    ...


def draw_init() -> None:
    ...


def disp_get_default() -> disp_t:
    ...


def event_send(obj: obj, event_code: int, param) -> int:
    ...


def event_register_id() -> int:
    ...


def group_create() -> group_t:
    ...


def group_get_default() -> group_t:
    ...


def group_swap_obj(obj: obj, parent: obj) -> None:
    ...


def group_remove_obj(obj: obj) -> None:
    ...


def group_focus_obj(obj: obj) -> None:
    ...


def init() -> None:
    ...


def deinit() -> None:
    ...


def is_initialized() -> bool:
    ...


def indev_read_timer_cb(timer: timer_t) -> None:
    ...


def indev_get_act() -> indev_t:
    ...


def indev_get_obj_act() -> obj:
    ...


def indev_search_obj(obj: obj, point: point_t) -> obj:
    ...


def refr_now(disp: disp_t) -> None:
    ...


def theme_get_from_obj(obj: obj) -> theme_t:
    ...


def theme_apply(obj: obj) -> None:
    ...


def theme_get_font_small(obj: obj) -> font_t:
    ...


def theme_get_font_normal(obj: obj) -> font_t:
    ...


def theme_get_font_large(obj: obj) -> font_t:
    ...


def theme_get_color_primary(obj: obj) -> color16_t:
    ...


def theme_get_color_secondary(obj: obj) -> color16_t:
    ...


def disp_load_scr(obj: obj) -> None:
    ...


def scr_load_anim(
        scr: obj,
        anim_type: int,
        time: int,
        delay: int,
        auto_del: bool
) -> None:
    ...


def font_load(fontName: str) -> font_t:
    ...


def snapshot_take(obj: obj, cf: int) -> img_dsc_t:
    ...


def snapshot_free(dsc: img_dsc_t) -> None:
    ...


def snapshot_buf_size_needed(obj: obj, cf: int) -> int:
    ...


def snapshot_take_to_buf(
        obj: obj,
        cf: int,
        dsc: img_dsc_t,
        buf,
        buff_size: int
) -> int:
    ...


def gridnav_add(obj: obj, ctrl: int) -> None:
    ...


def gridnav_remove(obj: obj) -> None:
    ...


def gridnav_set_focused(tv: obj, tile_obj: obj, anim_en: int) -> None:
    ...


def imgfont_create(user_data, path_cb: Callable, height: int) -> font_t:
    ...


def imgfont_destroy(font: font_t) -> None:
    ...


def msg_init() -> None:
    ...


def msg_subscribe(user_data, cb: Callable, msg_id: int) -> None:
    ...


def msg_subscribe_obj(user_data, obj: obj, msg_id: int) -> None:
    ...


def msg_unsubscribe(_) -> None:
    ...


def msg_send(msg_id: int, payload) -> None:
    ...


def msg_update_value(_) -> None:
    ...


def bmp_init() -> None:
    ...


def png_init() -> None:
    ...


def gd_open_gif_file(fname: str) -> gd_GIF:
    ...


def gd_open_gif_data(data) -> gd_GIF:
    ...


def split_jpeg_init() -> None:
    ...


def tiny_ttf_create_file(path: str, line_height: int) -> font_t:
    ...


def tiny_ttf_create_data(data, data_size: int, line_height: int) -> font_t:
    ...


def tiny_ttf_set_size(font: font_t, line_height: int) -> None:
    ...


def tiny_ttf_destroy(font: font_t) -> None:
    ...


def flex_init() -> None:
    ...


def grid_init() -> None:
    ...


def theme_default_init(
        disp: disp_t,
        color_primary: color16_t,
        color_secondary: color16_t,
        dark: bool,
        font: font_t
) -> theme_t:
    ...


def theme_default_get() -> theme_t:
    ...


def theme_default_is_inited() -> bool:
    ...


def theme_mono_init(disp: disp_t, dark_bg: bool, font: font_t) -> theme_t:
    ...


def theme_mono_is_inited() -> bool:
    ...


def theme_basic_init(disp: disp_t) -> theme_t:
    ...


def theme_basic_is_inited() -> bool:
    ...

font_montserrat_8: font_t = ...
font_montserrat_10: font_t = ...
font_montserrat_12: font_t = ...
font_montserrat_14: font_t = ...
font_montserrat_16: font_t = ...
font_montserrat_18: font_t = ...
font_montserrat_20: font_t = ...
font_montserrat_22: font_t = ...
font_montserrat_24: font_t = ...
font_montserrat_26: font_t = ...
font_montserrat_28: font_t = ...
font_montserrat_30: font_t = ...
font_montserrat_32: font_t = ...